#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative "retina_lexer"     # Importar el lexer de retina
require_relative "retina_ast"       # Importar el AST de retina
require_relative "retina_simtable"  # Importar el SIMTAB de retina

# CLASE de ERROR DE SINTÁXISz
#=======================================
class SyntacticError < RetinaError
  def initialize token
    @token = token
  end

  def to_s
    "#{@@prompt} Error de Sintáxis: linea #{@token.row}, columna #{@token.col}: token inesperado \'#{@token.to_str}\'"
  end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 254)
# Clase para captar los errores y producir una excepcion
# generando una instancia de error de sintaxis
def on_error(id, token, stack)
  raise SyntacticError::new(token)
end

# Clase para obtener el siguiente token reconocido por el lexer
def next_token
  token = @lexer.catch_lexeme
  return [false,false] unless token
  return [token.class,token]
end

# Función para hacer el parse del lexer con el método definido por racc
def parse(lexer)
  @yydebug = true
  @lexer = lexer
  @tokens = []
  ast = do_parse
  return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    43,   151,   137,    96,     2,    43,    99,    42,   100,     2,
    43,    44,    42,    67,    37,    38,    44,    42,     3,    37,
    38,    44,    43,     3,    37,    38,   101,    30,    31,    42,
   102,    30,    31,    44,   136,   136,    37,    38,    36,    41,
    40,    39,    49,    36,    41,    40,    39,    90,    36,    41,
    40,    39,   142,    62,    93,    35,   135,    43,   134,   136,
    36,    41,    40,    39,    42,   132,    43,    93,    44,    30,
    31,    37,    38,    42,    54,    43,    93,    44,    30,    31,
    37,    38,    42,    30,    31,    55,    44,    30,    31,    37,
    38,   136,    58,    59,    60,    36,    41,    40,    39,    93,
    62,    70,    62,    62,    36,    41,    40,    39,    80,    80,
    43,    80,    80,    36,    41,    40,    39,    42,    80,    43,
    80,    44,     7,    65,    37,    38,    42,    22,    43,    24,
    44,    27,    28,    37,    38,    42,    29,    46,   nil,    44,
   nil,   nil,    37,    38,   nil,   nil,   nil,   nil,    36,    41,
    40,    39,   nil,   nil,   nil,   nil,   nil,    36,    41,    40,
    39,   nil,   nil,    43,   nil,   nil,    36,    41,    40,    39,
    42,    95,    43,   nil,    44,   nil,   nil,    37,    38,    42,
   107,    43,   nil,    44,   nil,   nil,    37,    38,    42,   nil,
   nil,   nil,    44,   nil,   nil,    37,    38,   nil,   nil,   nil,
   nil,    36,    41,    40,    39,   nil,   nil,   nil,   nil,   nil,
    36,    41,    40,    39,   nil,   nil,    43,   nil,   nil,    36,
    41,    40,    39,    42,   nil,    43,   nil,    44,   nil,   nil,
    37,    38,    42,   nil,    43,   nil,    44,   nil,   nil,    37,
    38,    42,   nil,   nil,   nil,    44,   nil,   nil,    37,    38,
   nil,   nil,   nil,   nil,    36,    41,    40,    39,   nil,   nil,
   nil,   nil,   nil,    36,    41,    40,    39,   nil,   nil,    43,
   nil,   nil,    36,    41,    40,    39,    42,   nil,    43,   nil,
    44,   nil,   nil,    37,    38,    42,   nil,    43,   nil,    44,
   nil,   nil,    37,    38,    42,   nil,   nil,   nil,    44,   nil,
   nil,    37,    38,   nil,   nil,   nil,   nil,    36,    41,    40,
    39,   nil,   nil,   nil,   nil,   nil,    36,    41,    40,    39,
   nil,   nil,    43,   nil,   nil,    36,    41,    40,    39,    42,
   nil,    43,   nil,    44,   nil,   nil,    37,    38,    42,   nil,
    43,   nil,    44,   nil,   nil,    37,    38,    42,   nil,   nil,
   nil,    44,   nil,   nil,    37,    38,   nil,   nil,   nil,   nil,
    36,    41,    40,    39,   nil,   nil,   nil,   nil,   nil,    36,
    41,    40,    39,   nil,   nil,    43,   nil,   nil,    36,    41,
    40,    39,    42,   nil,    43,   nil,    44,   nil,   nil,    37,
    38,    42,   nil,    43,   nil,    44,   nil,   nil,    37,    38,
    42,   nil,   nil,   nil,    44,   nil,   nil,    37,    38,   nil,
   nil,   nil,   nil,    36,    41,    40,    39,   nil,   nil,   nil,
   nil,   nil,    36,    41,    40,    39,   nil,   nil,    43,   nil,
   nil,    36,    41,    40,    39,    42,   nil,    43,   nil,    44,
   nil,   nil,    37,    38,    42,   nil,    43,   nil,    44,   nil,
   nil,    37,    38,    42,   nil,   nil,   nil,    44,   nil,   nil,
    37,    38,   nil,   nil,   nil,   nil,    36,    41,    40,    39,
   nil,   nil,   nil,   nil,   nil,    36,    41,    40,    39,   nil,
   nil,    43,   nil,   nil,    36,    41,    40,    39,    42,   nil,
    43,   nil,    44,   nil,   nil,    37,    38,    42,   nil,    43,
   nil,    44,   nil,   nil,    37,    38,    42,   nil,   nil,   nil,
    44,   nil,   nil,    37,    38,   nil,   nil,   nil,   nil,    36,
    41,    40,    39,   nil,   nil,   nil,   nil,   nil,    36,    41,
    40,    39,   nil,   nil,    43,   nil,   nil,    36,    41,    40,
    39,    42,   nil,   nil,   nil,    44,   nil,   nil,    37,    38,
    81,    82,    84,    83,    86,    85,   nil,    79,    80,    74,
    75,    78,    77,    76,    80,    74,    75,    78,    77,    76,
    88,    87,    36,    41,    40,    39,   nil,   nil,   nil,   nil,
   nil,    81,    82,    84,    83,    86,    85,    92,    79,    80,
    74,    75,    78,    77,    76,    80,    74,    75,    78,    77,
    76,    88,    87,    80,    74,    75,    78,    77,    76,   nil,
    81,    82,    84,    83,    86,    85,   144,    79,    80,    74,
    75,    78,    77,    76,    80,    74,    75,    78,    77,    76,
    88,    87,   nil,   nil,   nil,   nil,   nil,   165,    81,    82,
    84,    83,    86,    85,   164,    79,    80,    74,    75,    78,
    77,    76,    80,    74,    75,    78,    77,    76,    88,    87,
   nil,   nil,    81,    82,    84,    83,    86,    85,    91,    79,
    80,    74,    75,    78,    77,    76,   nil,   nil,   nil,   nil,
   nil,   nil,    88,    87,   nil,   nil,   nil,   nil,   nil,   171,
    81,    82,    84,    83,    86,    85,   nil,    79,    80,    74,
    75,    78,    77,    76,   nil,   149,     9,   nil,    10,    12,
    88,    87,    11,   nil,   nil,   nil,    13,    89,   nil,   nil,
    17,   nil,   nil,    14,    15,    16,   nil,    18,     8,   104,
     9,   nil,    10,    12,   nil,   nil,    11,   nil,   nil,   nil,
    13,   nil,   nil,   nil,    17,   nil,   nil,    14,    15,    16,
   nil,    18,     8,   105,     9,   nil,    10,    12,   nil,   nil,
    11,   nil,   nil,   nil,    13,   nil,   nil,   nil,    17,   nil,
   nil,    14,    15,    16,   nil,    18,     8,   154,     9,   nil,
    10,    12,   nil,   nil,    11,   nil,   nil,   nil,    13,   nil,
   nil,   nil,    17,   nil,   nil,    14,    15,    16,   nil,    18,
     8,   174,     9,   nil,    10,    12,   nil,   nil,    11,   nil,
   nil,   nil,    13,   nil,   nil,   nil,    17,   nil,   nil,    14,
    15,    16,   nil,    18,     8,   158,     9,   nil,    10,    12,
   nil,   nil,    11,   nil,   nil,   nil,    13,   nil,   nil,   nil,
    17,   nil,   nil,    14,    15,    16,   nil,    18,     8,   159,
     9,   nil,    10,    12,   nil,   nil,    11,   nil,   nil,   nil,
    13,   nil,   nil,   nil,    17,   nil,   nil,    14,    15,    16,
   nil,    18,     8,   162,     9,   nil,    10,    12,   nil,   nil,
    11,   nil,   nil,   nil,    13,   nil,   nil,   nil,    17,   nil,
   nil,    14,    15,    16,   nil,    18,     8,   166,     9,   nil,
    10,    12,   nil,   nil,    11,   nil,   nil,   nil,    13,   nil,
   nil,   nil,    17,   nil,   nil,    14,    15,    16,   nil,    18,
     8,   175,     9,   nil,    10,    12,   nil,   nil,    11,   nil,
   nil,   nil,    13,   nil,   nil,   nil,    17,   nil,   nil,    14,
    15,    16,   nil,    18,     8,   170,     9,   nil,    10,    12,
   nil,   nil,    11,   nil,   nil,   nil,    13,   nil,   nil,   nil,
    17,   nil,   nil,    14,    15,    16,   nil,    18,     8,   127,
     9,   nil,    10,    12,   nil,   128,    11,   nil,   nil,   nil,
    13,   nil,   nil,   nil,    17,   nil,   nil,    14,    15,    16,
   nil,    18,     8,   130,     9,   nil,    10,    12,   nil,   nil,
    11,   nil,   nil,   nil,    13,   nil,   nil,   nil,    17,   nil,
   nil,    14,    15,    16,   nil,    18,     8,   172,     9,   nil,
    10,    12,   nil,   nil,    11,   nil,   nil,   nil,    13,   nil,
   nil,   nil,    17,   nil,   nil,    14,    15,    16,   nil,    18,
     8,   141,     9,   nil,    10,    12,   nil,   nil,    11,   nil,
   nil,   nil,    13,   nil,   nil,   nil,    17,   nil,   nil,    14,
    15,    16,   nil,    18,     8,    21,     9,   nil,    10,    12,
   nil,   nil,    11,   nil,   nil,   nil,    13,   nil,   nil,   nil,
    17,   nil,   nil,    14,    15,    16,   nil,    18,     8,   143,
     9,   nil,    10,    12,   nil,   nil,    11,   nil,   nil,   nil,
    13,   nil,   nil,   nil,    17,   nil,   nil,    14,    15,    16,
   nil,    18,     8,    57,     9,   nil,    10,    12,   nil,   nil,
    11,   nil,   nil,   nil,    13,   nil,   nil,   nil,    17,   nil,
   nil,    14,    15,    16,   nil,    18,     8,   145,     9,   nil,
    10,    12,   nil,   146,    11,   nil,   nil,   nil,    13,   nil,
   nil,   nil,    17,   nil,   nil,    14,    15,    16,   nil,    18,
     8,    69,     9,   nil,    10,    12,   nil,   nil,    11,   nil,
   nil,   nil,    13,   nil,   nil,   nil,    17,   nil,   nil,    14,
    15,    16,   nil,    18,     8,   148,     9,   nil,    10,    12,
   nil,   nil,    11,   nil,   nil,   nil,    13,   nil,   nil,   nil,
    17,   nil,   nil,    14,    15,    16,   nil,    18,     8,     9,
   nil,    10,    12,   nil,   nil,    11,   nil,   nil,   nil,    13,
   nil,   nil,   nil,    17,   nil,   nil,    14,    15,    16,   nil,
    18,     8,    81,    82,    84,    83,    86,    85,   nil,    79,
    80,    74,    75,    78,    77,    76,   nil,   nil,   nil,   nil,
   nil,   nil,    88,    87,    81,    82,    84,    83,    86,    85,
   nil,    79,    80,    74,    75,    78,    77,    76,   nil,   nil,
   nil,   nil,   nil,   nil,    88,    87,    81,    82,    84,    83,
    86,    85,   nil,    79,    80,    74,    75,    78,    77,    76,
   nil,   nil,   108,   nil,   nil,   nil,    88,    87,    81,    82,
    84,    83,    86,    85,   nil,    79,    80,    74,    75,    78,
    77,    76,   nil,    81,    82,    84,    83,    86,    85,    87,
    79,    80,    74,    75,    78,    77,    76,   nil,   nil,   nil,
   nil,   nil,   nil,    88,    87,    81,    82,    84,    83,    86,
    85,   nil,    79,    80,    74,    75,    78,    77,    76,   nil,
   nil,   nil,   nil,   nil,   nil,    88,    87,    81,    82,    84,
    83,    86,    85,   nil,    79,    80,    74,    75,    78,    77,
    76,   nil,   nil,   nil,   nil,   nil,   nil,    88,    87,    81,
    82,    84,    83,    86,    85,   nil,    79,    80,    74,    75,
    78,    77,    76,    84,    83,    86,    85,   nil,    79,    80,
    74,    75,    78,    77,    76,    84,    83,    86,    85,   nil,
    79,    80,    74,    75,    78,    77,    76 ]

racc_action_check = [
    42,   135,    99,    56,     0,    10,    58,    42,    63,     5,
    12,    42,    10,    34,    42,    42,    10,    12,     0,    10,
    10,    12,    13,     5,    12,    12,    64,    34,    34,    13,
    66,    58,    58,    13,   135,    99,    13,    13,    42,    42,
    42,    42,    14,    10,    10,    10,    10,    46,    12,    12,
    12,    12,   106,   150,   106,     9,    98,    15,    98,   155,
    13,    13,    13,    13,    15,    94,    16,    94,    15,     9,
     9,    15,    15,    16,    18,    17,    52,    16,   151,   151,
    16,    16,    17,   137,   137,    19,    17,   134,   134,    17,
    17,   161,    23,    25,    26,    15,    15,    15,    15,    51,
    97,    41,   101,    32,    16,    16,    16,    16,   109,   110,
    29,   111,   112,    17,    17,    17,    17,    29,   113,    43,
   115,    29,     1,    33,    29,    29,    43,     3,    44,     4,
    43,     6,     7,    43,    43,    44,     8,    11,   nil,    44,
   nil,   nil,    44,    44,   nil,   nil,   nil,   nil,    29,    29,
    29,    29,   nil,   nil,   nil,   nil,   nil,    43,    43,    43,
    43,   nil,   nil,    54,   nil,   nil,    44,    44,    44,    44,
    54,    54,    70,   nil,    54,   nil,   nil,    54,    54,    70,
    70,    74,   nil,    70,   nil,   nil,    70,    70,    74,   nil,
   nil,   nil,    74,   nil,   nil,    74,    74,   nil,   nil,   nil,
   nil,    54,    54,    54,    54,   nil,   nil,   nil,   nil,   nil,
    70,    70,    70,    70,   nil,   nil,    75,   nil,   nil,    74,
    74,    74,    74,    75,   nil,    76,   nil,    75,   nil,   nil,
    75,    75,    76,   nil,    77,   nil,    76,   nil,   nil,    76,
    76,    77,   nil,   nil,   nil,    77,   nil,   nil,    77,    77,
   nil,   nil,   nil,   nil,    75,    75,    75,    75,   nil,   nil,
   nil,   nil,   nil,    76,    76,    76,    76,   nil,   nil,    78,
   nil,   nil,    77,    77,    77,    77,    78,   nil,    79,   nil,
    78,   nil,   nil,    78,    78,    79,   nil,    80,   nil,    79,
   nil,   nil,    79,    79,    80,   nil,   nil,   nil,    80,   nil,
   nil,    80,    80,   nil,   nil,   nil,   nil,    78,    78,    78,
    78,   nil,   nil,   nil,   nil,   nil,    79,    79,    79,    79,
   nil,   nil,    81,   nil,   nil,    80,    80,    80,    80,    81,
   nil,    82,   nil,    81,   nil,   nil,    81,    81,    82,   nil,
    83,   nil,    82,   nil,   nil,    82,    82,    83,   nil,   nil,
   nil,    83,   nil,   nil,    83,    83,   nil,   nil,   nil,   nil,
    81,    81,    81,    81,   nil,   nil,   nil,   nil,   nil,    82,
    82,    82,    82,   nil,   nil,    84,   nil,   nil,    83,    83,
    83,    83,    84,   nil,    85,   nil,    84,   nil,   nil,    84,
    84,    85,   nil,    86,   nil,    85,   nil,   nil,    85,    85,
    86,   nil,   nil,   nil,    86,   nil,   nil,    86,    86,   nil,
   nil,   nil,   nil,    84,    84,    84,    84,   nil,   nil,   nil,
   nil,   nil,    85,    85,    85,    85,   nil,   nil,    87,   nil,
   nil,    86,    86,    86,    86,    87,   nil,    88,   nil,    87,
   nil,   nil,    87,    87,    88,   nil,    90,   nil,    88,   nil,
   nil,    88,    88,    90,   nil,   nil,   nil,    90,   nil,   nil,
    90,    90,   nil,   nil,   nil,   nil,    87,    87,    87,    87,
   nil,   nil,   nil,   nil,   nil,    88,    88,    88,    88,   nil,
   nil,    93,   nil,   nil,    90,    90,    90,    90,    93,   nil,
   100,   nil,    93,   nil,   nil,    93,    93,   100,   nil,   144,
   nil,   100,   nil,   nil,   100,   100,   144,   nil,   nil,   nil,
   144,   nil,   nil,   144,   144,   nil,   nil,   nil,   nil,    93,
    93,    93,    93,   nil,   nil,   nil,   nil,   nil,   100,   100,
   100,   100,   nil,   nil,   164,   nil,   nil,   144,   144,   144,
   144,   164,   nil,   nil,   nil,   164,   nil,   nil,   164,   164,
    48,    48,    48,    48,    48,    48,   nil,    48,    48,    48,
    48,    48,    48,    48,   121,   121,   121,   121,   121,   121,
    48,    48,   164,   164,   164,   164,   nil,   nil,   nil,   nil,
   nil,   125,   125,   125,   125,   125,   125,    48,   125,   125,
   125,   125,   125,   125,   125,   119,   119,   119,   119,   119,
   119,   125,   125,   118,   118,   118,   118,   118,   118,   nil,
   156,   156,   156,   156,   156,   156,   125,   156,   156,   156,
   156,   156,   156,   156,   120,   120,   120,   120,   120,   120,
   156,   156,   nil,   nil,   nil,   nil,   nil,   156,    47,    47,
    47,    47,    47,    47,   156,    47,    47,    47,    47,    47,
    47,    47,   114,   114,   114,   114,   114,   114,    47,    47,
   nil,   nil,   168,   168,   168,   168,   168,   168,    47,   168,
   168,   168,   168,   168,   168,   168,   nil,   nil,   nil,   nil,
   nil,   nil,   168,   168,   nil,   nil,   nil,   nil,   nil,   168,
    45,    45,    45,    45,    45,    45,   nil,    45,    45,    45,
    45,    45,    45,    45,   nil,   129,   129,   nil,   129,   129,
    45,    45,   129,   nil,   nil,   nil,   129,    45,   nil,   nil,
   129,   nil,   nil,   129,   129,   129,   nil,   129,   129,    67,
    67,   nil,    67,    67,   nil,   nil,    67,   nil,   nil,   nil,
    67,   nil,   nil,   nil,    67,   nil,   nil,    67,    67,    67,
   nil,    67,    67,    68,    68,   nil,    68,    68,   nil,   nil,
    68,   nil,   nil,   nil,    68,   nil,   nil,   nil,    68,   nil,
   nil,    68,    68,    68,   nil,    68,    68,   136,   136,   nil,
   136,   136,   nil,   nil,   136,   nil,   nil,   nil,   136,   nil,
   nil,   nil,   136,   nil,   nil,   136,   136,   136,   nil,   136,
   136,   171,   171,   nil,   171,   171,   nil,   nil,   171,   nil,
   nil,   nil,   171,   nil,   nil,   nil,   171,   nil,   nil,   171,
   171,   171,   nil,   171,   171,   146,   146,   nil,   146,   146,
   nil,   nil,   146,   nil,   nil,   nil,   146,   nil,   nil,   nil,
   146,   nil,   nil,   146,   146,   146,   nil,   146,   146,   147,
   147,   nil,   147,   147,   nil,   nil,   147,   nil,   nil,   nil,
   147,   nil,   nil,   nil,   147,   nil,   nil,   147,   147,   147,
   nil,   147,   147,   153,   153,   nil,   153,   153,   nil,   nil,
   153,   nil,   nil,   nil,   153,   nil,   nil,   nil,   153,   nil,
   nil,   153,   153,   153,   nil,   153,   153,   157,   157,   nil,
   157,   157,   nil,   nil,   157,   nil,   nil,   nil,   157,   nil,
   nil,   nil,   157,   nil,   nil,   157,   157,   157,   nil,   157,
   157,   173,   173,   nil,   173,   173,   nil,   nil,   173,   nil,
   nil,   nil,   173,   nil,   nil,   nil,   173,   nil,   nil,   173,
   173,   173,   nil,   173,   173,   165,   165,   nil,   165,   165,
   nil,   nil,   165,   nil,   nil,   nil,   165,   nil,   nil,   nil,
   165,   nil,   nil,   165,   165,   165,   nil,   165,   165,    91,
    91,   nil,    91,    91,   nil,    91,    91,   nil,   nil,   nil,
    91,   nil,   nil,   nil,    91,   nil,   nil,    91,    91,    91,
   nil,    91,    91,    92,    92,   nil,    92,    92,   nil,   nil,
    92,   nil,   nil,   nil,    92,   nil,   nil,   nil,    92,   nil,
   nil,    92,    92,    92,   nil,    92,    92,   169,   169,   nil,
   169,   169,   nil,   nil,   169,   nil,   nil,   nil,   169,   nil,
   nil,   nil,   169,   nil,   nil,   169,   169,   169,   nil,   169,
   169,   103,   103,   nil,   103,   103,   nil,   nil,   103,   nil,
   nil,   nil,   103,   nil,   nil,   nil,   103,   nil,   nil,   103,
   103,   103,   nil,   103,   103,     2,     2,   nil,     2,     2,
   nil,   nil,     2,   nil,   nil,   nil,     2,   nil,   nil,   nil,
     2,   nil,   nil,     2,     2,     2,   nil,     2,     2,   124,
   124,   nil,   124,   124,   nil,   nil,   124,   nil,   nil,   nil,
   124,   nil,   nil,   nil,   124,   nil,   nil,   124,   124,   124,
   nil,   124,   124,    20,    20,   nil,    20,    20,   nil,   nil,
    20,   nil,   nil,   nil,    20,   nil,   nil,   nil,    20,   nil,
   nil,    20,    20,    20,   nil,    20,    20,   126,   126,   nil,
   126,   126,   nil,   126,   126,   nil,   nil,   nil,   126,   nil,
   nil,   nil,   126,   nil,   nil,   126,   126,   126,   nil,   126,
   126,    35,    35,   nil,    35,    35,   nil,   nil,    35,   nil,
   nil,   nil,    35,   nil,   nil,   nil,    35,   nil,   nil,    35,
    35,    35,   nil,    35,    35,   128,   128,   nil,   128,   128,
   nil,   nil,   128,   nil,   nil,   nil,   128,   nil,   nil,   nil,
   128,   nil,   nil,   128,   128,   128,   nil,   128,   128,    89,
   nil,    89,    89,   nil,   nil,    89,   nil,   nil,   nil,    89,
   nil,   nil,   nil,    89,   nil,   nil,    89,    89,    89,   nil,
    89,    89,    53,    53,    53,    53,    53,    53,   nil,    53,
    53,    53,    53,    53,    53,    53,   nil,   nil,   nil,   nil,
   nil,   nil,    53,    53,    61,    61,    61,    61,    61,    61,
   nil,    61,    61,    61,    61,    61,    61,    61,   nil,   nil,
   nil,   nil,   nil,   nil,    61,    61,    71,    71,    71,    71,
    71,    71,   nil,    71,    71,    71,    71,    71,    71,    71,
   nil,   nil,    71,   nil,   nil,   nil,    71,    71,   123,   123,
   123,   123,   123,   123,   nil,   123,   123,   123,   123,   123,
   123,   123,   nil,   139,   139,   139,   139,   139,   139,   123,
   139,   139,   139,   139,   139,   139,   139,   nil,   nil,   nil,
   nil,   nil,   nil,   139,   139,    50,    50,    50,    50,    50,
    50,   nil,    50,    50,    50,    50,    50,    50,    50,   nil,
   nil,   nil,   nil,   nil,   nil,    50,    50,   131,   131,   131,
   131,   131,   131,   nil,   131,   131,   131,   131,   131,   131,
   131,   nil,   nil,   nil,   nil,   nil,   nil,   131,   131,   122,
   122,   122,   122,   122,   122,   nil,   122,   122,   122,   122,
   122,   122,   122,   116,   116,   116,   116,   nil,   116,   116,
   116,   116,   116,   116,   116,   117,   117,   117,   117,   nil,
   117,   117,   117,   117,   117,   117,   117 ]

racc_action_pointer = [
   -22,   122,  1038,    78,   110,   -17,   112,   132,   120,    26,
    -5,    87,     0,    12,    -8,    47,    56,    65,    57,    66,
  1086,   nil,   nil,    75,   nil,    74,    75,   nil,   nil,   100,
   nil,   nil,    53,   104,   -16,  1134,   nil,   nil,   nil,   nil,
   nil,    84,   -10,   109,   118,   688,    12,   636,   548,   nil,
  1333,    79,    56,  1230,   153,   nil,   -16,   nil,   -12,   nil,
   nil,  1252,   nil,    -8,     6,   nil,    11,   702,   726,   nil,
   162,  1274,   nil,   nil,   171,   206,   215,   224,   259,   268,
   277,   312,   321,   330,   365,   374,   383,   418,   427,  1181,
   436,   942,   966,   471,    47,   nil,   nil,    50,    38,    -6,
   480,    52,   nil,  1014,   nil,   nil,    34,   nil,   nil,    98,
    99,   101,   102,   108,   642,   110,  1389,  1401,   593,   585,
   614,   554,  1377,  1296,  1062,   579,  1110,   nil,  1158,   678,
   nil,  1355,   nil,   nil,    44,    -7,   750,    40,   nil,  1311,
   nil,   nil,   nil,   nil,   489,   nil,   798,   822,   nil,   nil,
     3,    35,   nil,   846,   nil,    18,   608,   870,   nil,   nil,
   nil,    50,   nil,   nil,   524,   918,   nil,   nil,   660,   990,
   nil,   774,   nil,   894,   nil,   nil ]

racc_action_default = [
   -79,   -79,   -37,   -79,   -79,   -79,   -79,   -79,   -79,   -79,
   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -79,
   -37,   -67,   -70,   -79,   -75,   -79,   -79,   -77,   176,   -79,
   -31,   -32,   -79,   -79,   -79,   -37,    -1,    -2,    -3,    -4,
    -5,   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -56,
   -26,   -57,   -58,   -59,   -79,   -62,   -79,   -66,   -79,   -76,
   -78,   -38,   -28,   -29,   -33,   -35,   -79,   -37,   -37,   -42,
   -79,   -79,    -9,   -10,   -79,   -79,   -79,   -79,   -79,   -79,
   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -37,
   -79,   -37,   -37,   -79,   -79,   -61,   -63,   -79,   -79,   -79,
   -79,   -79,   -36,   -37,   -40,   -41,   -79,    -7,    -8,   -11,
   -12,   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,   -21,
   -22,   -23,   -24,   -25,   -37,   -79,   -37,   -49,   -37,   -37,
   -55,   -27,   -60,   -64,   -79,   -79,   -37,   -79,   -74,   -34,
   -30,   -39,    -6,   -43,   -79,   -48,   -37,   -37,   -53,   -54,
   -79,   -79,   -73,   -37,   -69,   -79,   -79,   -37,   -51,   -52,
   -65,   -79,   -68,   -72,   -79,   -37,   -50,   -71,   -79,   -37,
   -47,   -37,   -46,   -37,   -45,   -44 ]

racc_goto_table = [
    20,   138,    45,    33,    47,    48,     4,    97,    56,    53,
     6,    25,     5,    64,    34,    26,    98,    23,     1,    63,
   nil,    61,   nil,   nil,   nil,   nil,   nil,   nil,    66,   nil,
   nil,   nil,   nil,    68,    71,    72,    73,   152,   nil,   nil,
   nil,   nil,    51,    52,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    56,   163,   nil,   nil,
   nil,   nil,   nil,   167,   nil,   103,   109,   110,   111,   112,
   113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
   123,    94,   125,   150,   133,   131,   155,   124,   140,   126,
   129,    56,   139,   nil,   nil,   nil,   nil,   106,   nil,   nil,
   161,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    56,   nil,    56,   nil,   nil,    56,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   147,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   153,    56,   156,   160,   nil,   nil,
   nil,    56,   nil,   nil,   157,    56,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   168,    56,   nil,   nil,
   nil,    56,   nil,   169,   nil,   nil,   nil,   nil,   nil,   173 ]

racc_goto_check = [
    10,    13,     2,     7,     2,     2,    15,     6,     9,     2,
    12,    15,    16,     5,     8,    12,    11,    14,     1,     4,
   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,
   nil,   nil,   nil,    10,     2,     2,     2,    13,   nil,   nil,
   nil,   nil,     3,     3,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     9,    13,   nil,   nil,
   nil,   nil,   nil,    13,   nil,    10,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     3,     2,     6,     4,     2,     6,    10,     4,    10,
    10,     9,     2,   nil,   nil,   nil,   nil,     3,   nil,   nil,
     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     9,   nil,     9,   nil,   nil,     9,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    10,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    10,     9,     2,     4,   nil,   nil,
   nil,     9,   nil,   nil,    10,     9,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     2,     9,   nil,   nil,
   nil,     9,   nil,    10,   nil,   nil,   nil,   nil,   nil,    10 ]

racc_goto_pointer = [
   nil,    18,    -8,    27,   -13,   -19,   -51,    -6,     5,   -12,
    -2,   -42,    10,   -98,    14,     6,    12 ]

racc_goto_default = [
   nil,   nil,    50,   nil,   nil,   nil,    32,   nil,   nil,    19,
   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 56, :_reduce_1,
  1, 56, :_reduce_2,
  1, 56, :_reduce_3,
  1, 56, :_reduce_4,
  1, 56, :_reduce_5,
  4, 56, :_reduce_6,
  3, 56, :_reduce_7,
  3, 56, :_reduce_8,
  2, 56, :_reduce_9,
  2, 56, :_reduce_10,
  3, 56, :_reduce_11,
  3, 56, :_reduce_12,
  3, 56, :_reduce_13,
  3, 56, :_reduce_14,
  3, 56, :_reduce_15,
  3, 56, :_reduce_16,
  3, 56, :_reduce_17,
  3, 56, :_reduce_18,
  3, 56, :_reduce_19,
  3, 56, :_reduce_20,
  3, 56, :_reduce_21,
  3, 56, :_reduce_22,
  3, 56, :_reduce_23,
  3, 56, :_reduce_24,
  3, 56, :_reduce_25,
  1, 57, :_reduce_26,
  3, 57, :_reduce_27,
  1, 58, :_reduce_28,
  1, 59, :_reduce_29,
  3, 59, :_reduce_30,
  1, 60, :_reduce_31,
  1, 60, :_reduce_32,
  2, 61, :_reduce_33,
  4, 61, :_reduce_34,
  2, 62, :_reduce_35,
  3, 62, :_reduce_36,
  0, 63, :_reduce_37,
  3, 63, :_reduce_38,
  5, 63, :_reduce_39,
  4, 63, :_reduce_40,
  4, 63, :_reduce_41,
  3, 63, :_reduce_42,
  5, 63, :_reduce_43,
  11, 63, :_reduce_44,
  10, 63, :_reduce_45,
  9, 63, :_reduce_46,
  8, 63, :_reduce_47,
  5, 63, :_reduce_48,
  4, 63, :_reduce_49,
  7, 63, :_reduce_50,
  6, 63, :_reduce_51,
  6, 63, :_reduce_52,
  5, 63, :_reduce_53,
  5, 63, :_reduce_54,
  4, 63, :_reduce_55,
  2, 63, :_reduce_56,
  2, 63, :_reduce_57,
  2, 63, :_reduce_58,
  2, 63, :_reduce_59,
  4, 63, :_reduce_60,
  3, 63, :_reduce_61,
  2, 64, :_reduce_62,
  3, 64, :_reduce_63,
  2, 65, :_reduce_64,
  4, 65, :_reduce_65,
  3, 66, :_reduce_66,
  2, 66, :_reduce_67,
  3, 67, :_reduce_68,
  2, 67, :_reduce_69,
  1, 68, :_reduce_70,
  8, 69, :_reduce_71,
  7, 69, :_reduce_72,
  6, 69, :_reduce_73,
  5, 69, :_reduce_74,
  2, 70, :_reduce_75,
  3, 70, :_reduce_76,
  2, 55, :_reduce_77,
  3, 55, :_reduce_78 ]

racc_reduce_n = 79

racc_shift_n = 176

racc_token_table = {
  false => 0,
  :error => 1,
  Equal => 2,
  NotEqual => 3,
  GreaterOrEqualTo => 4,
  LessOrEqualTo => 5,
  GreaterThan => 6,
  LessThan => 7,
  ReturnType => 8,
  Plus => 9,
  Minus => 10,
  Asterisk => 11,
  Slash => 12,
  Percent => 13,
  Mod => 14,
  Div => 15,
  Assignment => 16,
  OpenRoundBracket => 17,
  CloseRoundBracket => 18,
  Semicolon => 19,
  Comma => 20,
  Not => 21,
  And => 22,
  Or => 23,
  True => 24,
  False => 25,
  Program => 26,
  End => 27,
  With => 28,
  Do => 29,
  While => 30,
  If => 31,
  Then => 32,
  Else => 33,
  For => 34,
  From => 35,
  By => 36,
  To => 37,
  Repeat => 38,
  Times => 39,
  Function => 40,
  Begin => 41,
  Return => 42,
  Boolean => 43,
  Number => 44,
  Read => 45,
  Write => 46,
  WriteLine => 47,
  NumberLiteral => 48,
  FunctionIdentifier => 49,
  VariableIdentifier => 50,
  StringLiteral => 51,
  :UMINUS => 52,
  :noassoc => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\"->\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "mod",
  "div",
  "\"=\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "\",\"",
  "not",
  "and",
  "or",
  "true",
  "false",
  "program",
  "\"end\"",
  "with",
  "do",
  "while",
  "if",
  "then",
  "else",
  "for",
  "from",
  "by",
  "to",
  "repeat",
  "times",
  "func",
  "begin",
  "return",
  "boolean",
  "number",
  "read",
  "write",
  "writeln",
  "NumberLiteral",
  "FunctionID",
  "VariableID",
  "StringLiteral",
  "UMINUS",
  "noassoc",
  "$start",
  "RETINA",
  "EXPRESSION",
  "EXPRESSIONs",
  "VARID",
  "VARIDs",
  "DATATYPE",
  "STATEMENT",
  "STATEMENTs",
  "INSTRUCTION",
  "INSTRUCTIONs",
  "PARAMS",
  "PROGRAM",
  "BEGINEND",
  "FUNID",
  "FUNCTION",
  "FUNCTIONs" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 117)
  def _reduce_1(val, _values, result)
     result = Nodo_LitNumber.new( val[0] ); 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_2(val, _values, result)
     result = Nodo_LitBoolean.new( val[0] ); 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_3(val, _values, result)
     result = Nodo_LitBoolean.new( val[0] ); 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 120)
  def _reduce_4(val, _values, result)
     result = Nodo_LitString.new( val[0] ); 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 121)
  def _reduce_5(val, _values, result)
     result = Nodo_LlamaVariable.new( val[0] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_6(val, _values, result)
     result = Nodo_LlamaFuncion.new( val[0], val[2] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_7(val, _values, result)
     result = Nodo_LlamaFuncion.new( val[0], Nodo_Lista.new() ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 124)
  def _reduce_8(val, _values, result)
     result = val[1];
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_9(val, _values, result)
     result = Nodo_UMINUS.new( val[1] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_10(val, _values, result)
     result = Nodo_Not.new( val[1] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_11(val, _values, result)
     result = Nodo_Multiplicacion.new( val[0], val[2] ); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_12(val, _values, result)
     result = Nodo_DivisionReal.new( val[0], val[2] ); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 131)
  def _reduce_13(val, _values, result)
     result = Nodo_DivisionEntera.new( val[0], val[2] ); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_14(val, _values, result)
     result = Nodo_ModuloEntero.new( val[0], val[2] ); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_15(val, _values, result)
     result = Nodo_ModuloReal.new( val[0], val[2] ); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 134)
  def _reduce_16(val, _values, result)
     result = Nodo_Suma.new( val[0], val[2] ); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_17(val, _values, result)
     result = Nodo_Resta.new( val[0], val[2] ); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_18(val, _values, result)
     result = Nodo_IgualQue.new(val[0], val[2]); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 138)
  def _reduce_19(val, _values, result)
     result = Nodo_DiferenteDe.new(val[0], val[2]); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_20(val, _values, result)
     result = Nodo_MenorIgualQue.new(val[0], val[2]); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_21(val, _values, result)
     result = Nodo_MayorIgualQue.new(val[0], val[2]); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 142)
  def _reduce_22(val, _values, result)
     result = Nodo_MenorQue.new( val[0], val[2] ); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 143)
  def _reduce_23(val, _values, result)
     result = Nodo_MayorQue.new( val[0], val[2] ); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_24(val, _values, result)
     result = Nodo_O.new( val[0], val[2] ); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 146)
  def _reduce_25(val, _values, result)
     result = Nodo_Y.new( val[0], val[2] ); result.place val[1].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 149)
  def _reduce_26(val, _values, result)
     result = Nodo_Lista.new( val[0] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 150)
  def _reduce_27(val, _values, result)
     result = Nodo_Lista.new(val[2]).appendTo( val[0] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 153)
  def _reduce_28(val, _values, result)
     result = Nodo_VariableNewName.new( val[0] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 156)
  def _reduce_29(val, _values, result)
     result = Nodo_Lista.new( val[0] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 157)
  def _reduce_30(val, _values, result)
     result = Nodo_Lista.new( val[2] ).appendTo( val[0] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 160)
  def _reduce_31(val, _values, result)
     result = val[0];
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 161)
  def _reduce_32(val, _values, result)
     result = val[0];
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 164)
  def _reduce_33(val, _values, result)
     result = Nodo_DeclaracionMultiple.new(val[0], val[1]); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 165)
  def _reduce_34(val, _values, result)
     result = Nodo_DeclaracionCompleta.new(val[0], val[1], val[3]); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 168)
  def _reduce_35(val, _values, result)
     result = Nodo_Lista.new(val[0]); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 169)
  def _reduce_36(val, _values, result)
     result = Nodo_Lista.new(val[1]).appendTo(val[0]); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 172)
  def _reduce_37(val, _values, result)
     result = Nodo_Nulo.new;
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 173)
  def _reduce_38(val, _values, result)
     result = Nodo_Asignacion.new(              val[0],              val[2] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 174)
  def _reduce_39(val, _values, result)
     result = Nodo_BloqueWith.new(              val[1],              val[3] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 175)
  def _reduce_40(val, _values, result)
     result = Nodo_BloqueWith.new(              val[1], Nodo_Lista.new(nil) ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 176)
  def _reduce_41(val, _values, result)
     result = Nodo_BloqueWith.new( Nodo_Lista.new(nil),              val[2] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 177)
  def _reduce_42(val, _values, result)
     result = Nodo_BloqueWith.new( Nodo_Lista.new(nil), Nodo_Lista.new(nil) ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 178)
  def _reduce_43(val, _values, result)
     result = Nodo_BloqueWhile.new( val[1], val[3] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 179)
  def _reduce_44(val, _values, result)
     result = Nodo_BloqueFor.new( val[1], val[3], val[5],                  val[7],              val[9] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 180)
  def _reduce_45(val, _values, result)
     result = Nodo_BloqueFor.new( val[1], val[3], val[5],                  val[7], Nodo_Lista.new(nil) ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 181)
  def _reduce_46(val, _values, result)
     result = Nodo_BloqueFor.new( val[1], val[3], val[5], Nodo_LitNumber.new( 1 ),              val[7] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 182)
  def _reduce_47(val, _values, result)
     result = Nodo_BloqueFor.new( val[1], val[3], val[5], Nodo_LitNumber.new( 1 ), Nodo_Lista.new(nil) ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 183)
  def _reduce_48(val, _values, result)
     result = Nodo_BloqueIfElse.new( val[1],              val[3], Nodo_Lista.new(nil) ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 184)
  def _reduce_49(val, _values, result)
     result = Nodo_BloqueIfElse.new( val[1], Nodo_Lista.new(nil), Nodo_Lista.new(nil) ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 185)
  def _reduce_50(val, _values, result)
     result = Nodo_BloqueIfElse.new( val[1],              val[3],              val[5] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 186)
  def _reduce_51(val, _values, result)
     result = Nodo_BloqueIfElse.new( val[1],              val[3], Nodo_Lista.new(nil) ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 187)
  def _reduce_52(val, _values, result)
     result = Nodo_BloqueIfElse.new( val[1], Nodo_Lista.new(nil),              val[4] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 188)
  def _reduce_53(val, _values, result)
     result = Nodo_BloqueIfElse.new( val[1], Nodo_Lista.new(nil), Nodo_Lista.new(nil) ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 189)
  def _reduce_54(val, _values, result)
     result = Nodo_BloqueRepeat.new( val[1],             val[3]  ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 190)
  def _reduce_55(val, _values, result)
     result = Nodo_BloqueRepeat.new( val[1], Nodo_Lista.new(nil) ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 191)
  def _reduce_56(val, _values, result)
     result = Nodo_Read.new( val[1] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 192)
  def _reduce_57(val, _values, result)
     result = Nodo_Write.new( val[1],   "" ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 193)
  def _reduce_58(val, _values, result)
     result = Nodo_Write.new( val[1], "\n" ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 194)
  def _reduce_59(val, _values, result)
     result = Nodo_Return.new( val[1] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 195)
  def _reduce_60(val, _values, result)
     result = Nodo_LlamaFuncion.new( val[0],              val[2] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 196)
  def _reduce_61(val, _values, result)
     result = Nodo_LlamaFuncion.new( val[0], Nodo_Lista.new(nil) ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 199)
  def _reduce_62(val, _values, result)
     result = Nodo_Lista.new(val[0]); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 200)
  def _reduce_63(val, _values, result)
     result = Nodo_Lista.new(val[1]).appendTo(val[0]); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 203)
  def _reduce_64(val, _values, result)
     result = Nodo_Lista.new( Nodo_DeclaracionSimple.new( val[0], val[1] ) ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 204)
  def _reduce_65(val, _values, result)
     result = Nodo_Lista.new( Nodo_DeclaracionSimple.new( val[2], val[3] ) ).appendTo( val[0] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 207)
  def _reduce_66(val, _values, result)
     result = Nodo_BloqueProgram.new( val[1] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 208)
  def _reduce_67(val, _values, result)
     result = Nodo_BloqueProgram.new(    nil ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 211)
  def _reduce_68(val, _values, result)
     result =                val[1];
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 212)
  def _reduce_69(val, _values, result)
     result = Nodo_Lista.new( nil ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 215)
  def _reduce_70(val, _values, result)
     result = Nodo_FunctionNewName.new( val[0] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 218)
  def _reduce_71(val, _values, result)
     result = Nodo_NewFunctionBody.new( val[1],                val[3], val[6], val[7] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 219)
  def _reduce_72(val, _values, result)
     result = Nodo_NewFunctionBody.new( val[1], Nodo_Lista.new( nil ), val[5], val[6] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 220)
  def _reduce_73(val, _values, result)
     result = Nodo_NewFunctionBody.new( val[1],                val[3],    nil, val[5] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 221)
  def _reduce_74(val, _values, result)
     result = Nodo_NewFunctionBody.new( val[1], Nodo_Lista.new( nil ),    nil, val[4] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 224)
  def _reduce_75(val, _values, result)
     result = Nodo_Lista.new( val[0] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 225)
  def _reduce_76(val, _values, result)
     result = Nodo_Lista.new( val[1] ).appendTo( val[0] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 228)
  def _reduce_77(val, _values, result)
     result = AST.new( val[0] ); result.place val[0].row
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 229)
  def _reduce_78(val, _values, result)
     result = AST.new( val[1], val[0] ); result.place val[0].row
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
