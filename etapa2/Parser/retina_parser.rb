#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"
require_relative "retina_ast"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Syntactic error on: #{@token}"
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 177)

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def next_token
    token = @lexer.catch_lexeme
    return [false,false] unless token
    return [token.class,token]
end

def parse(lexer)
    @yydebug = true
    @lexer = lexer
    @tokens = []
    ast = do_parse
    return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    22,    84,     2,    30,     3,    22,    10,    25,    16,    85,
    22,    23,    25,    31,    18,    19,    23,    25,    84,    18,
    19,    23,    22,    84,    18,    19,    90,    22,    26,    25,
    28,    88,    91,    23,    25,    84,    18,    19,    23,    11,
    12,    18,    19,    99,    11,    12,    29,    17,    21,    20,
    11,    12,    17,    21,    20,    84,    54,    17,    21,    20,
    30,    61,     4,   100,     6,     8,    22,    56,     7,    17,
    21,    20,    22,    25,    17,    21,    20,    23,    22,    25,
    18,    19,    58,    23,    22,    25,    18,    19,   -33,    23,
    22,    25,    18,    19,     5,    23,    22,    25,    18,    19,
    84,    23,    62,    25,    18,    19,    45,    23,   104,    45,
    18,    19,    58,    17,    21,    20,    11,    12,    80,    17,
    21,    20,    11,    12,    58,    17,    21,    20,    83,    45,
    45,    17,    21,    20,    45,    22,    45,    17,    21,    20,
    22,    45,    25,    17,    21,    20,    23,    25,    89,    18,
    19,    23,    22,    58,    18,    19,    94,    22,    95,    25,
    58,    58,    22,    23,    25,    98,    18,    19,    23,    25,
   101,    18,    19,    23,   102,    58,    18,    19,   nil,    22,
   nil,   nil,    17,    21,    20,   nil,    25,    17,    21,    20,
    23,   nil,   nil,    18,    19,   nil,   nil,   nil,   nil,    17,
    21,    20,   nil,   nil,    17,    21,    20,    22,   nil,    17,
    21,    20,   nil,   nil,    25,   nil,   nil,   nil,    23,   nil,
   nil,    18,    19,    22,   nil,   nil,    17,    21,    20,    22,
    25,   nil,   nil,   nil,    23,    22,    25,    18,    19,   nil,
    23,   nil,    25,    18,    19,   nil,    23,   nil,   nil,    18,
    19,    22,   nil,   nil,    17,    21,    20,   nil,    25,   nil,
   nil,   nil,    23,   nil,   nil,    18,    19,   nil,   nil,   nil,
    17,    21,    20,   nil,   nil,   nil,    17,    21,    20,    45,
   nil,   nil,    17,    21,    20,    45,   nil,    37,    38,    41,
    40,    39,   nil,    37,    38,    41,    40,    39,    17,    21,
    20,    44,    45,    47,    46,    49,    48,   nil,    42,    43,
    37,    38,    41,    40,    39,   nil,   nil,   nil,   nil,   nil,
   nil,    51,    50,   nil,   nil,    44,    45,    47,    46,    49,
    48,    55,    42,    43,    37,    38,    41,    40,    39,   nil,
   nil,   nil,   nil,   nil,   nil,    51,    50,   nil,   nil,   nil,
   nil,   nil,    52,    44,    45,    47,    46,    49,    48,   nil,
    42,    43,    37,    38,    41,    40,    39,   nil,   nil,    79,
   nil,   nil,   nil,    51,    50,    44,    45,    47,    46,    49,
    48,   nil,    42,    43,    37,    38,    41,    40,    39,   nil,
   nil,   nil,   nil,   nil,   nil,    51,    50,    44,    45,    47,
    46,    49,    48,   nil,    42,    43,    37,    38,    41,    40,
    39,   nil,   nil,   nil,   nil,   nil,   nil,    51,    50,    44,
    45,    47,    46,    49,    48,   nil,    42,    43,    37,    38,
    41,    40,    39,   nil,   nil,   nil,   nil,   nil,   nil,    51,
    50,    44,    45,    47,    46,    49,    48,   nil,    42,    43,
    37,    38,    41,    40,    39,    44,    45,    47,    46,    49,
    48,   nil,    42,    43,    37,    38,    41,    40,    39,    45,
    47,    46,    49,    48,   nil,    42,    43,    37,    38,    41,
    40,    39,    45,   -42,   -42,   -42,   -42,   nil,    42,    43,
    37,    38,    41,    40,    39,    45,   -42,   -42,   -42,   -42,
   nil,    42,    43,    37,    38,    41,    40,    39,    45,   -42,
   -42,   -42,   -42,   nil,    42,    43,    37,    38,    41,    40,
    39,    45,   -42,   -42,   -42,   -42,   nil,    42,    43,    37,
    38,    41,    40,    39 ]

racc_action_check = [
     6,    60,     0,    15,     1,     8,     3,     6,     5,    60,
    22,     6,     8,    15,     6,     6,     8,    22,    81,     8,
     8,    22,    23,    78,    22,    22,    81,    25,     7,    23,
     9,    78,    81,    23,    25,    96,    23,    23,    25,     4,
     4,    25,    25,    96,    16,    16,    13,     6,     6,     6,
    30,    30,     8,     8,     8,    97,    26,    22,    22,    22,
    33,    33,     2,    97,     2,     2,    37,    29,     2,    23,
    23,    23,    38,    37,    25,    25,    25,    37,    39,    38,
    37,    37,    31,    38,    40,    39,    38,    38,    32,    39,
    41,    40,    39,    39,     2,    40,    42,    41,    40,    40,
   103,    41,    34,    42,    41,    41,    35,    42,   103,    36,
    42,    42,    52,    37,    37,    37,    61,    61,    54,    38,
    38,    38,    62,    62,    55,    39,    39,    39,    58,    63,
    64,    40,    40,    40,    65,    43,    66,    41,    41,    41,
    44,    67,    43,    42,    42,    42,    43,    44,    80,    43,
    43,    44,    45,    84,    44,    44,    87,    46,    89,    45,
    91,    94,    47,    45,    46,    95,    45,    45,    46,    47,
    98,    46,    46,    47,   101,   102,    47,    47,   nil,    48,
   nil,   nil,    43,    43,    43,   nil,    48,    44,    44,    44,
    48,   nil,   nil,    48,    48,   nil,   nil,   nil,   nil,    45,
    45,    45,   nil,   nil,    46,    46,    46,    49,   nil,    47,
    47,    47,   nil,   nil,    49,   nil,   nil,   nil,    49,   nil,
   nil,    49,    49,    50,   nil,   nil,    48,    48,    48,    51,
    50,   nil,   nil,   nil,    50,    56,    51,    50,    50,   nil,
    51,   nil,    56,    51,    51,   nil,    56,   nil,   nil,    56,
    56,    83,   nil,   nil,    49,    49,    49,   nil,    83,   nil,
   nil,   nil,    83,   nil,   nil,    83,    83,   nil,   nil,   nil,
    50,    50,    50,   nil,   nil,   nil,    51,    51,    51,    68,
   nil,   nil,    56,    56,    56,    69,   nil,    68,    68,    68,
    68,    68,   nil,    69,    69,    69,    69,    69,    83,    83,
    83,    27,    27,    27,    27,    27,    27,   nil,    27,    27,
    27,    27,    27,    27,    27,   nil,   nil,   nil,   nil,   nil,
   nil,    27,    27,   nil,   nil,    24,    24,    24,    24,    24,
    24,    27,    24,    24,    24,    24,    24,    24,    24,   nil,
   nil,   nil,   nil,   nil,   nil,    24,    24,   nil,   nil,   nil,
   nil,   nil,    24,    53,    53,    53,    53,    53,    53,   nil,
    53,    53,    53,    53,    53,    53,    53,   nil,   nil,    53,
   nil,   nil,   nil,    53,    53,    71,    71,    71,    71,    71,
    71,   nil,    71,    71,    71,    71,    71,    71,    71,   nil,
   nil,   nil,   nil,   nil,   nil,    71,    71,    82,    82,    82,
    82,    82,    82,   nil,    82,    82,    82,    82,    82,    82,
    82,   nil,   nil,   nil,   nil,   nil,   nil,    82,    82,    92,
    92,    92,    92,    92,    92,   nil,    92,    92,    92,    92,
    92,    92,    92,   nil,   nil,   nil,   nil,   nil,   nil,    92,
    92,    76,    76,    76,    76,    76,    76,   nil,    76,    76,
    76,    76,    76,    76,    76,    77,    77,    77,    77,    77,
    77,   nil,    77,    77,    77,    77,    77,    77,    77,    70,
    70,    70,    70,    70,   nil,    70,    70,    70,    70,    70,
    70,    70,    72,    72,    72,    72,    72,   nil,    72,    72,
    72,    72,    72,    72,    72,    73,    73,    73,    73,    73,
   nil,    73,    73,    73,    73,    73,    73,    73,    74,    74,
    74,    74,    74,   nil,    74,    74,    74,    74,    74,    74,
    74,    75,    75,    75,    75,    75,   nil,    75,    75,    75,
    75,    75,    75,    75 ]

racc_action_pointer = [
   -24,     4,    34,     6,    -4,   -50,   -10,   -29,    -5,     3,
   nil,   nil,   nil,   -12,   nil,   -16,     1,   nil,   nil,   nil,
   nil,   nil,     0,    12,   323,    17,    21,   299,   nil,    51,
     7,    24,    80,    41,    94,   103,   106,    56,    62,    68,
    74,    80,    86,   125,   130,   142,   147,   152,   169,   197,
   213,   219,    54,   351,    61,    66,   225,   nil,   112,   nil,
   -18,    73,    79,   126,   127,   131,   133,   138,   276,   282,
   466,   373,   479,   492,   505,   518,   439,   453,     4,   nil,
   111,    -1,   395,   241,    95,   nil,   nil,   115,   nil,   101,
   nil,   102,   417,   nil,   103,   129,    16,    36,   113,   nil,
   nil,   145,   117,    81,   nil ]

racc_action_default = [
   -42,   -42,   -42,   -42,   -42,   -42,   -42,   -42,   -42,   -42,
   105,   -24,   -25,   -42,   -29,   -42,   -42,    -1,    -2,    -3,
    -4,    -5,   -42,   -42,   -42,   -42,   -42,   -42,   -41,   -26,
   -42,   -42,   -29,   -42,   -42,    -6,    -7,   -42,   -42,   -42,
   -42,   -42,   -42,   -42,   -42,   -42,   -42,   -42,   -42,   -42,
   -42,   -42,   -42,   -42,   -42,   -42,   -42,   -30,   -42,   -31,
   -42,   -42,   -42,    -8,    -9,   -10,   -11,   -12,   -13,   -14,
   -15,   -16,   -17,   -18,   -19,   -20,   -21,   -22,   -42,   -23,
   -42,   -42,   -27,   -42,   -42,   -35,   -34,   -42,   -37,   -42,
   -39,   -42,   -28,   -32,   -42,   -42,   -42,   -42,   -42,   -40,
   -36,   -42,   -42,   -42,   -38 ]

racc_goto_table = [
    24,    60,    27,    14,     1,    87,    15,    93,    34,     9,
   nil,   nil,   nil,   nil,   nil,    32,    35,    36,    33,    53,
   nil,   nil,    78,   nil,   nil,    81,   nil,   nil,   nil,    57,
   nil,    63,    64,    65,    66,    67,    68,    69,    70,    71,
    72,    73,    74,    75,    76,    77,   nil,   nil,   nil,   nil,
    82,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    86,    96,   nil,   nil,    97,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   103,   nil,   nil,   nil,   nil,    92 ]

racc_goto_check = [
     2,     7,     2,     4,     1,     3,     6,     5,     8,     9,
   nil,   nil,   nil,   nil,   nil,     4,     2,     2,     6,     2,
   nil,   nil,     7,   nil,   nil,     7,   nil,   nil,   nil,     4,
   nil,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,   nil,   nil,   nil,   nil,
     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     4,     7,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     7,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     4,    -6,   -57,    -1,   -77,     2,   -30,    -8,     7 ]

racc_goto_default = [
   nil,   nil,   nil,    13,   nil,    59,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 63, :_reduce_1,
  1, 63, :_reduce_2,
  1, 63, :_reduce_3,
  1, 63, :_reduce_4,
  1, 63, :_reduce_5,
  2, 63, :_reduce_6,
  2, 63, :_reduce_7,
  3, 63, :_reduce_8,
  3, 63, :_reduce_9,
  3, 63, :_reduce_10,
  3, 63, :_reduce_11,
  3, 63, :_reduce_12,
  3, 63, :_reduce_13,
  3, 63, :_reduce_14,
  3, 63, :_reduce_15,
  3, 63, :_reduce_16,
  3, 63, :_reduce_17,
  3, 63, :_reduce_18,
  3, 63, :_reduce_19,
  3, 63, :_reduce_20,
  3, 63, :_reduce_21,
  3, 63, :_reduce_22,
  3, 63, :_reduce_23,
  1, 64, :_reduce_24,
  1, 64, :_reduce_25,
  2, 65, :_reduce_26,
  4, 65, :_reduce_27,
  3, 66, :_reduce_28,
  1, 67, :_reduce_29,
  3, 67, :_reduce_30,
  1, 68, :_reduce_31,
  3, 68, :_reduce_32,
  1, 69, :_reduce_33,
  3, 69, :_reduce_34,
  5, 70, :_reduce_35,
  8, 70, :_reduce_36,
  5, 70, :_reduce_37,
  11, 70, :_reduce_38,
  5, 70, :_reduce_39,
  7, 70, :_reduce_40,
  3, 62, :_reduce_41 ]

racc_reduce_n = 42

racc_shift_n = 105

racc_token_table = {
  false => 0,
  :error => 1,
  Equal => 2,
  NotEqual => 3,
  GreaterOrEqualTo => 4,
  LessOrEqualTo => 5,
  GreaterThan => 6,
  LessThan => 7,
  ReturnType => 8,
  Plus => 9,
  Minus => 10,
  Asterisk => 11,
  Slash => 12,
  Percent => 13,
  Mod => 14,
  Div => 15,
  Assignment => 16,
  OpenRoundBracket => 17,
  CloseRoundBracket => 18,
  Semicolon => 19,
  Comma => 20,
  Not => 21,
  And => 22,
  Or => 23,
  True => 24,
  False => 25,
  Program => 26,
  End => 27,
  With => 28,
  Do => 29,
  While => 30,
  If => 31,
  Then => 32,
  Else => 33,
  For => 34,
  From => 35,
  By => 36,
  To => 37,
  Repeat => 38,
  Times => 39,
  Function => 40,
  Begin => 41,
  Return => 42,
  Boolean => 43,
  Number => 44,
  OpenEye => 45,
  CloseEye => 46,
  Backward => 47,
  Forward => 48,
  RotateL => 49,
  RotateR => 50,
  SetPosition => 51,
  Arc => 52,
  Read => 53,
  Write => 54,
  WriteLine => 55,
  :UMINUS => 56,
  NumberLiteral => 57,
  VariableIdentifier => 58,
  StringLiteral => 59,
  "func" => 60 }

racc_nt_base = 61

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"==\"",
  "\"!=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\"->\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"mod\"",
  "\"div\"",
  "\"=\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "\",\"",
  "\"not\"",
  "\"and\"",
  "\"or\"",
  "\"true\"",
  "\"false\"",
  "\"program\"",
  "\"end\"",
  "\"with\"",
  "\"do\"",
  "\"while\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"for\"",
  "\"from\"",
  "\"by\"",
  "\"to\"",
  "\"repeat\"",
  "\"times\"",
  "\"function\"",
  "\"begin\"",
  "\"return\"",
  "\"boolean\"",
  "\"number\"",
  "\"openeye\"",
  "\"closeeye\"",
  "\"backward\"",
  "\"forward\"",
  "\"rotatel\"",
  "\"rotater\"",
  "\"setposition\"",
  "\"arc\"",
  "\"read\"",
  "\"write\"",
  "\"writeline\"",
  "UMINUS",
  "\"num\"",
  "\"id\"",
  "\"string\"",
  "\"func\"",
  "$start",
  "Retina",
  "Expression",
  "Datatype",
  "Statement",
  "Instruction",
  "Statements",
  "Instructions",
  "Params",
  "Blocks" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 100)
  def _reduce_1(val, _values, result)
     result = NumberType.new(val[0])             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 101)
  def _reduce_2(val, _values, result)
     result = TrueExp.new(val[0])                
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 102)
  def _reduce_3(val, _values, result)
     result = FalseExp.new(val[0])               
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_4(val, _values, result)
     result = StringType.new(val[0])             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 104)
  def _reduce_5(val, _values, result)
     result = Identifier.new(val[0])             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 105)
  def _reduce_6(val, _values, result)
     result = UnaryMinus.new(val[1])             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 106)
  def _reduce_7(val, _values, result)
     result = Negation.new(val[1])               
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 107)
  def _reduce_8(val, _values, result)
     result = Multiplication.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 108)
  def _reduce_9(val, _values, result)
     result = Division.new(val[0], val[2])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 109)
  def _reduce_10(val, _values, result)
     result = IntDivision.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 110)
  def _reduce_11(val, _values, result)
     result = Modulus.new(val[0], val[2])        
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 111)
  def _reduce_12(val, _values, result)
     result = ExactylModulus.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 112)
  def _reduce_13(val, _values, result)
     result = Addition.new(val[0], val[2])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 113)
  def _reduce_14(val, _values, result)
     result = Subtraction.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_15(val, _values, result)
     result = Equivalent.new(val[0], val[2])     
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_16(val, _values, result)
     result = Diferent.new(val[0], val[2])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 116)
  def _reduce_17(val, _values, result)
     result = LessOrEqual.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 117)
  def _reduce_18(val, _values, result)
     result = GreaterOrEqual.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_19(val, _values, result)
     result = Less.new(val[0], val[2])           
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_20(val, _values, result)
     result = Greater.new(val[0], val[2])        
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 120)
  def _reduce_21(val, _values, result)
     result = Disyunction.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 121)
  def _reduce_22(val, _values, result)
     result = Conjunction.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_23(val, _values, result)
     result = val[1]                             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 125)
  def _reduce_24(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_25(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 129)
  def _reduce_26(val, _values, result)
     result = Declare.new(val[0], val[1])                       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_27(val, _values, result)
     result = DeclareWithAssignment.new(val[0], val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 133)
  def _reduce_28(val, _values, result)
     result = AssignmentInst.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_29(val, _values, result)
     result = val[0]            
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 137)
  def _reduce_30(val, _values, result)
     result = val[0] + [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_31(val, _values, result)
     result = val[0]            
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_32(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 144)
  def _reduce_33(val, _values, result)
     result = val[0]            
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_34(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 148)
  def _reduce_35(val, _values, result)
     result = WithBlock.new(val[1])  
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 149)
  def _reduce_36(val, _values, result)
     result = BeginBlock.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 150)
  def _reduce_37(val, _values, result)
     result = BeginBlock.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 151)
  def _reduce_38(val, _values, result)
     result = BeginBlock.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 152)
  def _reduce_39(val, _values, result)
     result = IfBlock.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 153)
  def _reduce_40(val, _values, result)
     result = IfBlock.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 156)
  def _reduce_41(val, _values, result)
     result = ProgramBlock.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
