#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"
require_relative "retina_ast"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Syntactic error on: #{@token}"
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 202)

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def next_token
    token = @lexer.catch_lexeme
    return [false,false] unless token
    return [token.class,token]
end

def parse(lexer)
    @yydebug = true
    @lexer = lexer
    @tokens = []
    ast = do_parse
    return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,   109,     2,     2,   106,    98,   107,    16,   119,    53,
    54,    14,    13,     7,     9,    10,    53,    54,    19,    16,
    20,    22,    13,    14,    21,    18,     9,    10,    23,    16,
    53,    54,    28,    14,   110,    31,     9,    10,     3,     3,
    89,   120,   108,    32,   107,    33,     8,    18,    17,    11,
    53,    54,    13,    17,    53,    54,    53,    54,     8,    16,
    17,    11,    13,    14,    53,    54,     9,    10,     8,    16,
    17,    11,    13,    14,    62,    63,     9,    10,    13,    16,
    66,    67,    68,    14,    17,    16,     9,    10,    87,    14,
    91,    96,     9,    10,    99,   100,   127,   132,     8,   140,
    17,    11,    37,    38,    41,    40,    39,   148,     8,   nil,
    17,    11,    37,    38,    41,    40,    39,   nil,     8,   nil,
    17,    11,    13,   nil,     8,   nil,    17,    11,   nil,    16,
   nil,   nil,   nil,    14,    13,   nil,     9,    10,   nil,    65,
    19,    16,    20,    22,    13,    14,    21,   nil,     9,    10,
    23,    16,   nil,   nil,   nil,    14,   nil,   nil,     9,    10,
    37,    38,    41,    40,    39,   nil,   nil,   nil,     8,    18,
    17,    11,   nil,   nil,    13,    37,    38,    41,    40,    39,
     8,    16,    17,    11,    13,    14,   nil,   nil,     9,    10,
     8,    16,    17,    11,    13,    14,   nil,   nil,     9,    10,
    13,    16,   nil,   nil,   nil,    14,   nil,    16,     9,    10,
    13,    14,   nil,   nil,     9,    10,   nil,    16,   nil,   nil,
     8,    14,    17,    11,     9,    10,   nil,   nil,   nil,   nil,
     8,   nil,    17,    11,    37,    38,    41,    40,    39,   nil,
     8,   nil,    17,    11,   nil,   nil,     8,   nil,    17,    11,
    13,   nil,   nil,   nil,   nil,    13,     8,    16,    17,    11,
    13,    14,    16,   nil,     9,    10,    14,    16,   nil,     9,
    10,    14,    13,   nil,     9,    10,   nil,    13,   nil,    16,
   nil,   nil,   nil,    14,    16,   nil,     9,    10,    14,   nil,
   nil,     9,    10,   nil,   nil,   nil,     8,   nil,    17,    11,
    13,     8,   nil,    17,    11,   nil,     8,    16,    17,    11,
   nil,    14,   nil,   nil,     9,    10,   nil,    13,     8,   nil,
    17,    11,    13,     8,    16,    17,    11,    13,    14,    16,
   nil,     9,    10,    14,    16,   nil,     9,    10,    14,   nil,
   nil,     9,    10,   nil,   nil,   nil,     8,   nil,    17,    11,
    47,    46,    49,    48,   nil,    42,    43,    37,    38,    41,
    40,    39,   nil,     8,   nil,    17,    11,    13,     8,   nil,
    17,    11,   nil,     8,    16,    17,    11,   nil,    14,    13,
   nil,     9,    10,   nil,   nil,    19,    16,    20,    22,   nil,
    14,    21,   nil,     9,    10,    23,   nil,    19,   nil,    20,
    22,   nil,   nil,    21,   nil,   nil,   nil,    23,    37,    38,
    41,    40,    39,     8,    18,    17,    11,   nil,   nil,   nil,
   nil,   nil,    13,   nil,   nil,     8,    18,    17,    11,    16,
   nil,    13,   nil,    14,   nil,   nil,     9,    10,    16,   nil,
   nil,   nil,    14,   nil,   nil,     9,    10,   nil,   nil,    19,
   nil,    20,    22,   nil,   nil,    21,   nil,   nil,    13,    23,
   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,     8,    14,
    17,    11,     9,    10,    13,   nil,   nil,     8,    18,    17,
    11,    16,   nil,   nil,   nil,    14,   nil,   nil,     9,    10,
   nil,   nil,    19,   nil,    20,    22,   nil,   nil,    21,   nil,
   nil,   nil,    23,   nil,     8,   nil,    17,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,   nil,   nil,
     8,    18,    17,    11,    16,   nil,   nil,   nil,    14,    13,
   nil,     9,    10,   nil,   112,    19,    16,    20,    22,   nil,
    14,    21,   nil,     9,    10,    23,   113,    19,   nil,    20,
    22,   nil,   nil,    21,   nil,   nil,   nil,    23,   nil,   nil,
   nil,   nil,   nil,     8,    18,    17,    11,   nil,   nil,   nil,
   nil,   nil,    13,   nil,   nil,     8,    18,    17,    11,    16,
   nil,   nil,   nil,    14,   nil,   nil,     9,    10,   nil,   115,
    19,   nil,    20,    22,   nil,   116,    21,   nil,   nil,   nil,
    23,    44,    45,    47,    46,    49,    48,   nil,    42,    43,
    37,    38,    41,    40,    39,    13,   nil,   nil,     8,    18,
    17,    11,    16,   nil,   nil,   nil,    14,    13,   nil,     9,
    10,   nil,   117,    19,    16,    20,    22,   nil,    14,    21,
   nil,     9,    10,    23,   nil,    19,   nil,    20,    22,   nil,
   nil,    21,   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,
   nil,     8,    18,    17,    11,   nil,   nil,   nil,   nil,   nil,
    13,   nil,   nil,     8,    18,    17,    11,    16,   nil,    13,
   nil,    14,   nil,   nil,     9,    10,    16,   nil,   nil,   nil,
    14,   nil,   nil,     9,    10,   nil,   nil,    19,   nil,    20,
    22,   nil,   nil,    21,   nil,   nil,   nil,    23,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     8,   nil,    17,    11,
   nil,   nil,    13,   nil,   nil,     8,    18,    17,    11,    16,
   nil,   nil,   nil,    14,    13,   nil,     9,    10,   nil,   nil,
    19,    16,    20,    22,   nil,    14,    21,   nil,     9,    10,
    23,   128,    19,   nil,    20,    22,   nil,   nil,    21,   nil,
   nil,   nil,    23,   nil,   nil,   nil,   nil,   nil,     8,    18,
    17,    11,   nil,   nil,   nil,   nil,   nil,    13,   nil,   nil,
     8,    18,    17,    11,    16,   nil,   nil,   nil,    14,    13,
   nil,     9,    10,   nil,   131,    19,    16,    20,    22,   nil,
    14,    21,   nil,     9,    10,    23,   133,    19,   nil,    20,
    22,   nil,   nil,    21,   nil,   nil,   nil,    23,   nil,   nil,
   nil,   nil,   nil,     8,    18,    17,    11,   nil,   nil,   nil,
   nil,   nil,    13,   nil,   nil,     8,    18,    17,    11,    16,
   nil,   nil,   nil,    14,    13,   nil,     9,    10,   nil,   nil,
    19,    16,    20,    22,   nil,    14,    21,   nil,     9,    10,
    23,   nil,   nil,   nil,   135,    47,    46,    49,    48,   nil,
    42,    43,    37,    38,    41,    40,    39,   nil,     8,    18,
    17,    11,   nil,   nil,    13,   nil,   nil,   nil,   nil,   nil,
     8,    16,    17,    11,   nil,    14,    13,   nil,     9,    10,
   nil,   nil,    19,    16,    20,    22,   nil,    14,    21,   nil,
     9,    10,    23,   nil,    19,   nil,    20,    22,   nil,   nil,
    21,   nil,   nil,   nil,    23,   nil,   nil,   nil,   135,   nil,
     8,    18,    17,    11,   nil,   nil,   nil,   nil,   nil,    13,
   nil,   nil,     8,    18,    17,    11,    16,   nil,    13,   nil,
    14,   nil,   nil,     9,    10,    16,   nil,   nil,   nil,    14,
   nil,   nil,     9,    10,   nil,   143,    19,   nil,    20,    22,
   nil,   nil,    21,   nil,   nil,   nil,    23,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     8,   nil,    17,    11,   nil,
   nil,    13,   nil,   nil,     8,    18,    17,    11,    16,   nil,
   nil,   nil,    14,    13,   nil,     9,    10,   nil,   145,    19,
    16,    20,    22,   nil,    14,    21,   nil,     9,    10,    23,
   146,    19,   nil,    20,    22,   nil,   nil,    21,   nil,   nil,
   nil,    23,   nil,   nil,   nil,   nil,   nil,     8,    18,    17,
    11,   nil,   nil,   nil,   nil,   nil,    13,   nil,   nil,     8,
    18,    17,    11,    16,   nil,   nil,   nil,    14,    13,   nil,
     9,    10,   nil,   nil,    19,    16,    20,    22,   nil,    14,
    21,   nil,     9,    10,    23,   150,    19,   nil,    20,    22,
   nil,   nil,    21,   nil,   nil,   nil,    23,   nil,   nil,   nil,
   nil,   nil,     8,    18,    17,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     8,    18,    17,    11,    44,    45,
    47,    46,    49,    48,   nil,    42,    43,    37,    38,    41,
    40,    39,   nil,   nil,   nil,   nil,   nil,   nil,    51,    50,
    44,    45,    47,    46,    49,    48,   nil,    42,    43,    37,
    38,    41,    40,    39,   nil,    93,   nil,   nil,   nil,   nil,
    51,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    44,
    45,    47,    46,    49,    48,   114,    42,    43,    37,    38,
    41,    40,    39,   nil,   nil,   nil,   nil,   nil,   nil,    51,
    50,   nil,   nil,   nil,   nil,   nil,   130,    44,    45,    47,
    46,    49,    48,   129,    42,    43,    37,    38,    41,    40,
    39,   nil,   nil,   nil,   nil,   nil,   nil,    51,    50,   nil,
   nil,    44,    45,    47,    46,    49,    48,    92,    42,    43,
    37,    38,    41,    40,    39,   nil,   nil,   nil,   nil,   nil,
   nil,    51,    50,   nil,   nil,   nil,   nil,   nil,    90,    44,
    45,    47,    46,    49,    48,   nil,    42,    43,    37,    38,
    41,    40,    39,   nil,   nil,   nil,   nil,   nil,   nil,    51,
    50,   nil,   nil,   nil,   nil,   nil,   144,    44,    45,    47,
    46,    49,    48,   nil,    42,    43,    37,    38,    41,    40,
    39,   nil,   nil,   nil,   nil,   nil,   nil,    51,    50,    44,
    45,    47,    46,    49,    48,   nil,    42,    43,    37,    38,
    41,    40,    39,   nil,   nil,    85,   nil,   nil,   nil,    51,
    50,    44,    45,    47,    46,    49,    48,   nil,    42,    43,
    37,    38,    41,    40,    39,   nil,   nil,   nil,   nil,   nil,
   nil,    51,    50,    44,    45,    47,    46,    49,    48,   nil,
    42,    43,    37,    38,    41,    40,    39,   nil,    44,    45,
    47,    46,    49,    48,    50,    42,    43,    37,    38,    41,
    40,    39,   nil,   nil,   nil,   nil,   nil,   nil,    51,    50,
    44,    45,    47,    46,    49,    48,   nil,    42,    43,    37,
    38,    41,    40,    39,   nil,   nil,   nil,   147,   nil,   nil,
    51,    50 ]

racc_action_check = [
     2,    98,     0,     5,    94,    66,    94,     2,   108,    19,
    19,     2,    13,     1,     2,     2,    62,    62,     2,    13,
     2,     2,    14,    13,     2,     3,    13,    13,     2,    14,
    66,    66,     4,    14,    98,     6,    14,    14,     0,     5,
    57,   108,    97,     7,    97,    12,     2,     2,     2,     2,
   107,   107,    16,    21,    57,    57,   109,   109,    13,    16,
    13,    13,    20,    16,   119,   119,    16,    16,    14,    20,
    14,    14,    22,    20,    24,    25,    20,    20,    23,    22,
    27,    29,    30,    22,    55,    23,    22,    22,    56,    23,
    59,    64,    23,    23,    86,    88,   121,   125,    16,   134,
    16,    16,    75,    75,    75,    75,    75,   142,    20,   nil,
    20,    20,    76,    76,    76,    76,    76,   nil,    22,   nil,
    22,    22,    26,   nil,    23,   nil,    23,    23,   nil,    26,
   nil,   nil,   nil,    26,    33,   nil,    26,    26,   nil,    26,
    26,    33,    26,    26,    37,    33,    26,   nil,    33,    33,
    26,    37,   nil,   nil,   nil,    37,   nil,   nil,    37,    37,
    79,    79,    79,    79,    79,   nil,   nil,   nil,    26,    26,
    26,    26,   nil,   nil,    38,    80,    80,    80,    80,    80,
    33,    38,    33,    33,    39,    38,   nil,   nil,    38,    38,
    37,    39,    37,    37,    40,    39,   nil,   nil,    39,    39,
    41,    40,   nil,   nil,   nil,    40,   nil,    41,    40,    40,
    42,    41,   nil,   nil,    41,    41,   nil,    42,   nil,   nil,
    38,    42,    38,    38,    42,    42,   nil,   nil,   nil,   nil,
    39,   nil,    39,    39,    81,    81,    81,    81,    81,   nil,
    40,   nil,    40,    40,   nil,   nil,    41,   nil,    41,    41,
    43,   nil,   nil,   nil,   nil,    44,    42,    43,    42,    42,
    45,    43,    44,   nil,    43,    43,    44,    45,   nil,    44,
    44,    45,    46,   nil,    45,    45,   nil,    47,   nil,    46,
   nil,   nil,   nil,    46,    47,   nil,    46,    46,    47,   nil,
   nil,    47,    47,   nil,   nil,   nil,    43,   nil,    43,    43,
    48,    44,   nil,    44,    44,   nil,    45,    48,    45,    45,
   nil,    48,   nil,   nil,    48,    48,   nil,    49,    46,   nil,
    46,    46,    50,    47,    49,    47,    47,    51,    49,    50,
   nil,    49,    49,    50,    51,   nil,    50,    50,    51,   nil,
   nil,    51,    51,   nil,   nil,   nil,    48,   nil,    48,    48,
    77,    77,    77,    77,   nil,    77,    77,    77,    77,    77,
    77,    77,   nil,    49,   nil,    49,    49,    89,    50,   nil,
    50,    50,   nil,    51,    89,    51,    51,   nil,    89,    90,
   nil,    89,    89,   nil,   nil,    89,    90,    89,    89,   nil,
    90,    89,   nil,    90,    90,    89,   nil,    90,   nil,    90,
    90,   nil,   nil,    90,   nil,   nil,   nil,    90,    82,    82,
    82,    82,    82,    89,    89,    89,    89,   nil,   nil,   nil,
   nil,   nil,    91,   nil,   nil,    90,    90,    90,    90,    91,
   nil,    92,   nil,    91,   nil,   nil,    91,    91,    92,   nil,
   nil,   nil,    92,   nil,   nil,    92,    92,   nil,   nil,    92,
   nil,    92,    92,   nil,   nil,    92,   nil,   nil,    99,    92,
   nil,   nil,   nil,   nil,   nil,    99,   nil,   nil,    91,    99,
    91,    91,    99,    99,    93,   nil,   nil,    92,    92,    92,
    92,    93,   nil,   nil,   nil,    93,   nil,   nil,    93,    93,
   nil,   nil,    93,   nil,    93,    93,   nil,   nil,    93,   nil,
   nil,   nil,    93,   nil,    99,   nil,    99,    99,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   101,   nil,   nil,
    93,    93,    93,    93,   101,   nil,   nil,   nil,   101,   102,
   nil,   101,   101,   nil,   101,   101,   102,   101,   101,   nil,
   102,   101,   nil,   102,   102,   101,   102,   102,   nil,   102,
   102,   nil,   nil,   102,   nil,   nil,   nil,   102,   nil,   nil,
   nil,   nil,   nil,   101,   101,   101,   101,   nil,   nil,   nil,
   nil,   nil,   104,   nil,   nil,   102,   102,   102,   102,   104,
   nil,   nil,   nil,   104,   nil,   nil,   104,   104,   nil,   104,
   104,   nil,   104,   104,   nil,   104,   104,   nil,   nil,   nil,
   104,    83,    83,    83,    83,    83,    83,   nil,    83,    83,
    83,    83,    83,    83,    83,   105,   nil,   nil,   104,   104,
   104,   104,   105,   nil,   nil,   nil,   105,   110,   nil,   105,
   105,   nil,   105,   105,   110,   105,   105,   nil,   110,   105,
   nil,   110,   110,   105,   nil,   110,   nil,   110,   110,   nil,
   nil,   110,   nil,   nil,   nil,   110,   nil,   nil,   nil,   nil,
   nil,   105,   105,   105,   105,   nil,   nil,   nil,   nil,   nil,
   114,   nil,   nil,   110,   110,   110,   110,   114,   nil,   116,
   nil,   114,   nil,   nil,   114,   114,   116,   nil,   nil,   nil,
   116,   nil,   nil,   116,   116,   nil,   nil,   116,   nil,   116,
   116,   nil,   nil,   116,   nil,   nil,   nil,   116,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   114,   nil,   114,   114,
   nil,   nil,   120,   nil,   nil,   116,   116,   116,   116,   120,
   nil,   nil,   nil,   120,   122,   nil,   120,   120,   nil,   nil,
   120,   122,   120,   120,   nil,   122,   120,   nil,   122,   122,
   120,   122,   122,   nil,   122,   122,   nil,   nil,   122,   nil,
   nil,   nil,   122,   nil,   nil,   nil,   nil,   nil,   120,   120,
   120,   120,   nil,   nil,   nil,   nil,   nil,   124,   nil,   nil,
   122,   122,   122,   122,   124,   nil,   nil,   nil,   124,   126,
   nil,   124,   124,   nil,   124,   124,   126,   124,   124,   nil,
   126,   124,   nil,   126,   126,   124,   126,   126,   nil,   126,
   126,   nil,   nil,   126,   nil,   nil,   nil,   126,   nil,   nil,
   nil,   nil,   nil,   124,   124,   124,   124,   nil,   nil,   nil,
   nil,   nil,   127,   nil,   nil,   126,   126,   126,   126,   127,
   nil,   nil,   nil,   127,   129,   nil,   127,   127,   nil,   nil,
   127,   129,   127,   127,   nil,   129,   127,   nil,   129,   129,
   127,   nil,   nil,   nil,   127,    78,    78,    78,    78,   nil,
    78,    78,    78,    78,    78,    78,    78,   nil,   127,   127,
   127,   127,   nil,   nil,   130,   nil,   nil,   nil,   nil,   nil,
   129,   130,   129,   129,   nil,   130,   132,   nil,   130,   130,
   nil,   nil,   130,   132,   130,   130,   nil,   132,   130,   nil,
   132,   132,   130,   nil,   132,   nil,   132,   132,   nil,   nil,
   132,   nil,   nil,   nil,   132,   nil,   nil,   nil,   132,   nil,
   130,   130,   130,   130,   nil,   nil,   nil,   nil,   nil,   135,
   nil,   nil,   132,   132,   132,   132,   135,   nil,   136,   nil,
   135,   nil,   nil,   135,   135,   136,   nil,   nil,   nil,   136,
   nil,   nil,   136,   136,   nil,   136,   136,   nil,   136,   136,
   nil,   nil,   136,   nil,   nil,   nil,   136,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   135,   nil,   135,   135,   nil,
   nil,   138,   nil,   nil,   136,   136,   136,   136,   138,   nil,
   nil,   nil,   138,   139,   nil,   138,   138,   nil,   138,   138,
   139,   138,   138,   nil,   139,   138,   nil,   139,   139,   138,
   139,   139,   nil,   139,   139,   nil,   nil,   139,   nil,   nil,
   nil,   139,   nil,   nil,   nil,   nil,   nil,   138,   138,   138,
   138,   nil,   nil,   nil,   nil,   nil,   144,   nil,   nil,   139,
   139,   139,   139,   144,   nil,   nil,   nil,   144,   149,   nil,
   144,   144,   nil,   nil,   144,   149,   144,   144,   nil,   149,
   144,   nil,   149,   149,   144,   149,   149,   nil,   149,   149,
   nil,   nil,   149,   nil,   nil,   nil,   149,   nil,   nil,   nil,
   nil,   nil,   144,   144,   144,   144,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   149,   149,   149,   149,    61,    61,
    61,    61,    61,    61,   nil,    61,    61,    61,    61,    61,
    61,    61,   nil,   nil,   nil,   nil,   nil,   nil,    61,    61,
   103,   103,   103,   103,   103,   103,   nil,   103,   103,   103,
   103,   103,   103,   103,   nil,    61,   nil,   nil,   nil,   nil,
   103,   103,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   123,
   123,   123,   123,   123,   123,   103,   123,   123,   123,   123,
   123,   123,   123,   nil,   nil,   nil,   nil,   nil,   nil,   123,
   123,   nil,   nil,   nil,   nil,   nil,   123,    60,    60,    60,
    60,    60,    60,   123,    60,    60,    60,    60,    60,    60,
    60,   nil,   nil,   nil,   nil,   nil,   nil,    60,    60,   nil,
   nil,    58,    58,    58,    58,    58,    58,    60,    58,    58,
    58,    58,    58,    58,    58,   nil,   nil,   nil,   nil,   nil,
   nil,    58,    58,   nil,   nil,   nil,   nil,   nil,    58,   137,
   137,   137,   137,   137,   137,   nil,   137,   137,   137,   137,
   137,   137,   137,   nil,   nil,   nil,   nil,   nil,   nil,   137,
   137,   nil,   nil,   nil,   nil,   nil,   137,    15,    15,    15,
    15,    15,    15,   nil,    15,    15,    15,    15,    15,    15,
    15,   nil,   nil,   nil,   nil,   nil,   nil,    15,    15,    52,
    52,    52,    52,    52,    52,   nil,    52,    52,    52,    52,
    52,    52,    52,   nil,   nil,    52,   nil,   nil,   nil,    52,
    52,    69,    69,    69,    69,    69,    69,   nil,    69,    69,
    69,    69,    69,    69,    69,   nil,   nil,   nil,   nil,   nil,
   nil,    69,    69,    84,    84,    84,    84,    84,    84,   nil,
    84,    84,    84,    84,    84,    84,    84,   nil,   111,   111,
   111,   111,   111,   111,    84,   111,   111,   111,   111,   111,
   111,   111,   nil,   nil,   nil,   nil,   nil,   nil,   111,   111,
   141,   141,   141,   141,   141,   141,   nil,   141,   141,   141,
   141,   141,   141,   141,   nil,   nil,   nil,   141,   nil,   nil,
   141,   141 ]

racc_action_pointer = [
   -24,    13,   -10,   -32,    13,   -23,    16,    43,   nil,   nil,
   nil,   nil,    29,     2,    12,  1265,    42,   nil,   nil,   -34,
    52,    -5,    62,    68,    57,    56,   112,    63,   nil,    62,
    63,   nil,   nil,   124,   nil,   nil,   nil,   134,   164,   174,
   184,   190,   200,   240,   245,   250,   262,   267,   290,   307,
   312,   317,  1287,   nil,   nil,    26,    69,    11,  1209,    55,
  1185,  1106,   -27,   nil,    72,   nil,   -13,   nil,   nil,  1309,
   nil,   nil,   nil,   nil,   nil,    91,   101,   346,   861,   149,
   164,   223,   397,   599,  1331,   nil,    78,   nil,    76,   357,
   369,   412,   421,   464,   -14,   nil,   nil,    24,    -7,   448,
   nil,   507,   519,  1128,   562,   605,   nil,     7,     0,    13,
   617,  1346,   nil,   nil,   660,   nil,   669,   nil,   nil,    21,
   712,    55,   724,  1157,   767,    56,   779,   822,   nil,   834,
   874,   nil,   886,   nil,    80,   929,   938,  1237,   981,   993,
   nil,  1368,    88,   nil,  1036,   nil,   nil,   nil,   nil,  1048,
   nil ]

racc_action_default = [
   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,    -1,    -2,
    -3,    -4,    -5,   -58,   -58,   -32,   -58,   -24,   -25,   -58,
   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -54,   -58,
   -58,   -56,   151,   -58,    -5,    -6,    -7,   -58,   -58,   -58,
   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,
   -58,   -58,   -58,   -26,   -27,   -58,   -58,   -58,   -58,   -58,
   -58,   -58,   -58,   -42,   -58,   -49,   -58,   -55,   -57,   -33,
    -8,    -9,   -10,   -11,   -12,   -13,   -14,   -15,   -16,   -17,
   -18,   -19,   -20,   -21,   -22,   -23,   -28,   -30,   -58,   -58,
   -58,   -58,   -58,   -58,   -58,   -47,   -43,   -58,   -58,   -58,
   -31,   -58,   -58,   -58,   -58,   -58,   -41,   -58,   -58,   -58,
   -58,   -29,   -34,   -35,   -58,   -38,   -58,   -40,   -48,   -58,
   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -53,   -58,
   -58,   -39,   -58,   -52,   -58,   -58,   -58,   -58,   -58,   -58,
   -44,   -58,   -58,   -51,   -58,   -37,   -50,   -45,   -46,   -58,
   -36 ]

racc_goto_table = [
    12,    56,   121,   136,     6,     4,     1,    94,   139,    30,
    29,    97,   125,    27,    57,     5,   nil,   nil,   nil,    59,
   nil,   nil,   nil,   nil,    12,    26,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    88,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    86,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    64,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    12,    12,   118,
    12,    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    12,
    12,   nil,    12,    12,   nil,   nil,   nil,   nil,    12,   nil,
   nil,   nil,   101,   102,    12,   104,   105,   nil,    12,   nil,
    12,   nil,    12,   nil,    12,    12,   nil,   nil,    12,   nil,
    12,   nil,   nil,   122,    12,   nil,    12,    12,   nil,   124,
   nil,   nil,    12,   126,   nil,    64,    64,    12,    64,    64,
   nil,   nil,   nil,   138,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    64,   149,    64,   nil,
    64,   134,   nil,   nil,   nil,   nil,   134,   nil,    35,    36,
   142,    52,    64,   142,   nil,    58,   nil,    60,    61,   nil,
   nil,   nil,   nil,    64,   nil,   nil,   nil,   nil,    69,   nil,
   nil,   nil,    70,    71,    72,    73,    74,    75,    76,    77,
    78,    79,    80,    81,    82,    83,    84,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   103,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   111,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   123,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   137,   nil,   nil,   nil,   nil,   nil,
   141 ]

racc_goto_check = [
     3,     6,     5,    11,    12,    13,     1,    10,    11,    12,
    13,    10,     5,     4,     7,    14,   nil,   nil,   nil,     3,
   nil,   nil,   nil,   nil,     3,     9,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     8,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,     3,     6,
     3,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,
     3,   nil,     3,     3,   nil,   nil,   nil,   nil,     3,   nil,
   nil,   nil,     9,     9,     3,     9,     9,   nil,     3,   nil,
     3,   nil,     3,   nil,     3,     3,   nil,   nil,     3,   nil,
     3,   nil,   nil,     9,     3,   nil,     3,     3,   nil,     9,
   nil,   nil,     3,     9,   nil,     8,     8,     3,     8,     8,
   nil,   nil,   nil,     9,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     8,     9,     8,   nil,
     8,     8,   nil,   nil,   nil,   nil,     8,   nil,     2,     2,
     8,     2,     8,     8,   nil,     2,   nil,     2,     2,   nil,
   nil,   nil,   nil,     8,   nil,   nil,   nil,   nil,     2,   nil,
   nil,   nil,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,
     2 ]

racc_goto_pointer = [
   nil,     6,   165,    -2,    10,  -107,   -18,    -5,    44,    23,
   -55,  -124,     4,     5,    15 ]

racc_goto_default = [
   nil,   nil,    15,    34,    24,    55,    95,   nil,    25,   nil,
   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 65, :_reduce_1,
  1, 65, :_reduce_2,
  1, 65, :_reduce_3,
  1, 65, :_reduce_4,
  1, 65, :_reduce_5,
  2, 65, :_reduce_6,
  2, 65, :_reduce_7,
  3, 65, :_reduce_8,
  3, 65, :_reduce_9,
  3, 65, :_reduce_10,
  3, 65, :_reduce_11,
  3, 65, :_reduce_12,
  3, 65, :_reduce_13,
  3, 65, :_reduce_14,
  3, 65, :_reduce_15,
  3, 65, :_reduce_16,
  3, 65, :_reduce_17,
  3, 65, :_reduce_18,
  3, 65, :_reduce_19,
  3, 65, :_reduce_20,
  3, 65, :_reduce_21,
  3, 65, :_reduce_22,
  3, 65, :_reduce_23,
  1, 66, :_reduce_24,
  1, 67, :_reduce_25,
  1, 68, :_reduce_26,
  1, 68, :_reduce_27,
  2, 69, :_reduce_28,
  4, 69, :_reduce_29,
  2, 70, :_reduce_30,
  3, 70, :_reduce_31,
  1, 71, :_reduce_32,
  3, 71, :_reduce_33,
  5, 71, :_reduce_34,
  5, 71, :_reduce_35,
  11, 71, :_reduce_36,
  9, 71, :_reduce_37,
  5, 71, :_reduce_38,
  7, 71, :_reduce_39,
  5, 71, :_reduce_40,
  4, 71, :_reduce_41,
  2, 72, :_reduce_42,
  3, 72, :_reduce_43,
  2, 74, :_reduce_44,
  3, 74, :_reduce_45,
  3, 74, :_reduce_46,
  1, 73, :_reduce_47,
  3, 73, :_reduce_48,
  3, 75, :_reduce_49,
  10, 76, :_reduce_50,
  9, 76, :_reduce_51,
  8, 76, :_reduce_52,
  7, 76, :_reduce_53,
  2, 77, :_reduce_54,
  3, 77, :_reduce_55,
  2, 64, :_reduce_56,
  3, 64, :_reduce_57 ]

racc_reduce_n = 58

racc_shift_n = 151

racc_token_table = {
  false => 0,
  :error => 1,
  Equal => 2,
  NotEqual => 3,
  GreaterOrEqualTo => 4,
  LessOrEqualTo => 5,
  GreaterThan => 6,
  LessThan => 7,
  ReturnType => 8,
  Plus => 9,
  Minus => 10,
  Asterisk => 11,
  Slash => 12,
  Percent => 13,
  Mod => 14,
  Div => 15,
  Assignment => 16,
  OpenRoundBracket => 17,
  CloseRoundBracket => 18,
  Semicolon => 19,
  Comma => 20,
  Not => 21,
  And => 22,
  Or => 23,
  True => 24,
  False => 25,
  Program => 26,
  End => 27,
  With => 28,
  Do => 29,
  While => 30,
  If => 31,
  Then => 32,
  Else => 33,
  For => 34,
  From => 35,
  By => 36,
  To => 37,
  Repeat => 38,
  Times => 39,
  Function => 40,
  Begin => 41,
  Return => 42,
  Boolean => 43,
  Number => 44,
  OpenEye => 45,
  CloseEye => 46,
  Backward => 47,
  Forward => 48,
  RotateL => 49,
  RotateR => 50,
  SetPosition => 51,
  Arc => 52,
  Read => 53,
  Write => 54,
  WriteLine => 55,
  NumberLiteral => 56,
  FunctionIdentifier => 57,
  VariableIdentifier => 58,
  StringLiteral => 59,
  :UMINUS => 60,
  :noassoc => 61,
  "func" => 62 }

racc_nt_base = 63

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\"->\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"mod\"",
  "\"div\"",
  "\"=\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "\",\"",
  "\"not\"",
  "\"and\"",
  "\"or\"",
  "\"true\"",
  "\"false\"",
  "\"program\"",
  "\"end\"",
  "\"with\"",
  "\"do\"",
  "\"while\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"for\"",
  "\"from\"",
  "\"by\"",
  "\"to\"",
  "\"repeat\"",
  "\"times\"",
  "\"function\"",
  "\"begin\"",
  "\"return\"",
  "\"boolean\"",
  "\"number\"",
  "\"openeye\"",
  "\"closeeye\"",
  "\"backward\"",
  "\"forward\"",
  "\"rotatel\"",
  "\"rotater\"",
  "\"setposition\"",
  "\"arc\"",
  "\"read\"",
  "\"write\"",
  "\"writeline\"",
  "\"num\"",
  "\"funid\"",
  "\"varid\"",
  "\"str\"",
  "UMINUS",
  "noassoc",
  "\"func\"",
  "$start",
  "Retina",
  "Expression",
  "VarID",
  "FunID",
  "Datatype",
  "Statement",
  "Statements",
  "Instruction",
  "Instructions",
  "Params",
  "InstructionsR",
  "Program",
  "Function",
  "Functions" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 101)
  def _reduce_1(val, _values, result)
     result = SingleNumber.new(val[0])               
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 102)
  def _reduce_2(val, _values, result)
     result = SingleTrue.new(val[0])                 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_3(val, _values, result)
     result = SingleFalse.new(val[0])                
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 104)
  def _reduce_4(val, _values, result)
     result = SingleString.new(val[0])               
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 105)
  def _reduce_5(val, _values, result)
     result = val[0]                      
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 106)
  def _reduce_6(val, _values, result)
     result = UnaryMinusOperation.new(val[1])             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 107)
  def _reduce_7(val, _values, result)
     result = NegationOperation.new(val[1])               
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 108)
  def _reduce_8(val, _values, result)
     result = MultiplicationOperation.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 109)
  def _reduce_9(val, _values, result)
     result = DivisionOperation.new(val[0], val[2])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 110)
  def _reduce_10(val, _values, result)
     result = IntDivisionOperation.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 111)
  def _reduce_11(val, _values, result)
     result = ModulusOperation.new(val[0], val[2])        
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 112)
  def _reduce_12(val, _values, result)
     result = ExactModulusOperation.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 113)
  def _reduce_13(val, _values, result)
     result = AdditionOperation.new(val[0], val[2])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_14(val, _values, result)
     result = SubtractionOperation.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_15(val, _values, result)
     result = EquivalentOperation.new(val[0], val[2])     
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 116)
  def _reduce_16(val, _values, result)
     result = DifferentOperation.new(val[0], val[2])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 117)
  def _reduce_17(val, _values, result)
     result = LessOrEqualOperation.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_18(val, _values, result)
     result = GreaterOrEqualOperation.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_19(val, _values, result)
     result = LessOperation.new(val[0], val[2])           
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 120)
  def _reduce_20(val, _values, result)
     result = GreaterOperation.new(val[0], val[2])        
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 121)
  def _reduce_21(val, _values, result)
     result = DisjunctionOperation.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_22(val, _values, result)
     result = ConjunctionOperation.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_23(val, _values, result)
     result = val[1]                                     
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_24(val, _values, result)
    result = VariableName.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 128)
  def _reduce_25(val, _values, result)
    result = FunctionName.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 131)
  def _reduce_26(val, _values, result)
     result = Type.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_27(val, _values, result)
     result = Type.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_28(val, _values, result)
     result = SimpleStatement.new(val[0], val[1])                       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_29(val, _values, result)
     result = AssignmentStatement.new(val[0], val[1], val[3])           
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_30(val, _values, result)
     result = ASList.new(val[0])             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_31(val, _values, result)
     result = ASList.new(val[1]).joina(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 143)
  def _reduce_32(val, _values, result)
     val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 144)
  def _reduce_33(val, _values, result)
     result = AssignmentInstruction.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_34(val, _values, result)
     result = WithBlock.new(val[1], val[3])           
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 146)
  def _reduce_35(val, _values, result)
     result = WhileBlock.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 147)
  def _reduce_36(val, _values, result)
     result = ForBlock.new(val[1],val[3],val[5],val[7],val[8]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 148)
  def _reduce_37(val, _values, result)
     result = ForBlock.new(val[1],val[3],val[5],1,     val[8]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 149)
  def _reduce_38(val, _values, result)
     result = IfBlock.new(val[1], val[3])     
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 150)
  def _reduce_39(val, _values, result)
     result = IfElseBlock.new(val[1], val[3], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 151)
  def _reduce_40(val, _values, result)
     result = RepeatBlock.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 152)
  def _reduce_41(val, _values, result)
     result = FunctionName.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 155)
  def _reduce_42(val, _values, result)
     result = ASList.new(val[0])             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 156)
  def _reduce_43(val, _values, result)
     result = ASList.new(val[1]).joina(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 159)
  def _reduce_44(val, _values, result)
     result = ASList.new(val[0])             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 160)
  def _reduce_45(val, _values, result)
     result = ASList.new(val[1])        
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 161)
  def _reduce_46(val, _values, result)
     result = ASList.new(val[1]).joina(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 164)
  def _reduce_47(val, _values, result)
     result = ASList.new(val[0])            
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 165)
  def _reduce_48(val, _values, result)
     result = ASList.new(val[2]).joina(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 168)
  def _reduce_49(val, _values, result)
     result = ProgramBlock.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 171)
  def _reduce_50(val, _values, result)
     result = FunctionStatement.new(val[1], val[3], val[6], val[8])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 172)
  def _reduce_51(val, _values, result)
     result = FunctionStatement.new(val[1], {}, val[5], val[6])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 173)
  def _reduce_52(val, _values, result)
     result = FunctionStatement.new(val[1], val[3], {}, val[6])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 174)
  def _reduce_53(val, _values, result)
     result = FunctionStatement.new(val[1], {}, {}, val[5])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 177)
  def _reduce_54(val, _values, result)
     result = ASList.new(val[0])  
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 178)
  def _reduce_55(val, _values, result)
     result = ASList.new(val[1]).joina(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 180)
  def _reduce_56(val, _values, result)
     result = ASList.new(val[0])  
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 181)
  def _reduce_57(val, _values, result)
     result = ASList.new(val[1]).joina(val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
