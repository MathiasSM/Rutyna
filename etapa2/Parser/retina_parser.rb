#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "retina_lexer"
require_relative "retina_ast"

class SyntacticError < RuntimeError

    def initialize(tok)
        @token = tok
    end

    def to_s
        "Syntactic error on: #{@token}"
    end
end

class Parser < Racc::Parser

module_eval(<<'...end retina_parser.y/module_eval...', 'retina_parser.y', 197)

def on_error(id, token, stack)
    raise SyntacticError::new(token)
end

def next_token
    token = @lexer.catch_lexeme
    return [false,false] unless token
    return [token.class,token]
end

def parse(lexer)
    @yydebug = true
    @lexer = lexer
    @tokens = []
    ast = do_parse
    return ast
end
...end retina_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,   114,     2,     2,   103,     7,   104,    16,   105,    25,
   104,    14,    13,    26,     9,    10,    87,    29,    17,    16,
    18,    20,    13,    14,    19,    30,     9,    10,    21,    16,
    51,    52,    31,    14,   115,    57,     9,    10,     3,     3,
    35,    36,    39,    38,    37,    60,     8,    22,    12,    11,
    51,    52,    13,    35,    36,    39,    38,    37,     8,    16,
    32,    11,    13,    14,    51,    52,     9,    10,     8,    16,
    32,    11,    13,    14,    51,    52,     9,    10,    13,    16,
    51,    52,    61,    14,    64,    16,     9,    10,    65,    14,
    51,    52,     9,    10,    66,    84,    85,    89,     8,    94,
    32,    11,    35,    36,    39,    38,    37,    96,     8,    97,
    32,    11,    35,    36,    39,    38,    37,   123,     8,   132,
    32,    11,    13,   138,     8,   nil,    32,    11,   nil,    16,
   nil,   nil,   nil,    14,    13,   nil,     9,    10,   nil,    63,
    17,    16,    18,    20,    13,    14,    19,   nil,     9,    10,
    21,    16,   nil,   nil,   nil,    14,   nil,   nil,     9,    10,
    35,    36,    39,    38,    37,   nil,   nil,   nil,     8,    22,
    12,    11,   nil,   nil,    13,    35,    36,    39,    38,    37,
     8,    16,    32,    11,    13,    14,   nil,   nil,     9,    10,
     8,    16,    32,    11,    13,    14,   nil,   nil,     9,    10,
    13,    16,   nil,   nil,   nil,    14,   nil,    16,     9,    10,
    13,    14,   nil,   nil,     9,    10,   nil,    16,   nil,   nil,
     8,    14,    32,    11,     9,    10,   nil,   nil,   nil,   nil,
     8,   nil,    32,    11,   nil,   nil,   nil,   nil,   nil,   nil,
     8,   nil,    32,    11,   nil,   nil,     8,   nil,    32,    11,
    13,   nil,   nil,   nil,   nil,    13,     8,    16,    32,    11,
    13,    14,    16,   nil,     9,    10,    14,    16,   nil,     9,
    10,    14,    13,   nil,     9,    10,   nil,    13,   nil,    16,
   nil,   nil,   nil,    14,    16,   nil,     9,    10,    14,   nil,
   nil,     9,    10,   nil,   nil,   nil,     8,   nil,    32,    11,
    13,     8,   nil,    32,    11,   nil,     8,    16,    32,    11,
   nil,    14,   nil,   nil,     9,    10,   nil,    13,     8,   nil,
    32,    11,    13,     8,    16,    32,    11,    13,    14,    16,
   nil,     9,    10,    14,    16,   nil,     9,    10,    14,   nil,
   nil,     9,    10,   nil,   nil,   nil,     8,   nil,    32,    11,
    45,    44,    47,    46,   nil,    40,    41,    35,    36,    39,
    38,    37,   nil,     8,   nil,    32,    11,    13,     8,   nil,
    32,    11,   nil,     8,    16,    32,    11,   nil,    14,    13,
   nil,     9,    10,   nil,   nil,    17,    16,    18,    20,   nil,
    14,    19,   nil,     9,    10,    21,   nil,    17,   nil,    18,
    20,   nil,   nil,    19,   nil,   nil,   nil,    21,   nil,   nil,
   nil,   nil,   nil,     8,    22,    12,    11,   nil,   nil,   nil,
   nil,   nil,    13,   nil,   nil,     8,    22,    12,    11,    16,
   nil,    13,   nil,    14,   nil,   nil,     9,    10,    16,   nil,
   nil,   nil,    14,   nil,   nil,     9,    10,   nil,   nil,    17,
   nil,    18,    20,   nil,   nil,    19,   nil,   nil,    13,    21,
   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,     8,    14,
    32,    11,     9,    10,    13,   nil,   nil,     8,    22,    12,
    11,    16,   nil,   nil,   nil,    14,   nil,   nil,     9,    10,
   nil,   nil,    17,   nil,    18,    20,   nil,   nil,    19,   nil,
   nil,   nil,    21,   nil,     8,   nil,    32,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,   nil,   nil,
     8,    22,    12,    11,    16,   nil,   nil,   nil,    14,    13,
   nil,     9,    10,   nil,   107,    17,    16,    18,    20,   nil,
    14,    19,   nil,     9,    10,    21,   108,    17,   nil,    18,
    20,   nil,   nil,    19,   nil,   nil,   nil,    21,   nil,   nil,
   nil,   nil,   nil,     8,    22,    12,    11,   nil,   nil,   nil,
   nil,   nil,    13,   nil,   nil,     8,    22,    12,    11,    16,
   nil,   nil,   nil,    14,   nil,   nil,     9,    10,   nil,   110,
    17,   nil,    18,    20,   nil,   111,    19,   nil,    13,   nil,
    21,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,    14,
   nil,   nil,     9,    10,   nil,    13,   nil,   nil,     8,    22,
    12,    11,    16,   nil,   nil,   nil,    14,   nil,   nil,     9,
    10,   nil,   112,    17,   nil,    18,    20,   nil,   nil,    19,
   nil,   nil,   nil,    21,     8,   nil,    32,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,   nil,
   nil,     8,    22,    12,    11,    16,   nil,   nil,   nil,    14,
    13,   nil,     9,    10,   nil,   nil,    17,    16,    18,    20,
   nil,    14,    19,   nil,     9,    10,    21,   nil,    17,   nil,
    18,    20,   nil,   nil,    19,   nil,   nil,   nil,    21,   nil,
   nil,   nil,   nil,   nil,     8,    22,    12,    11,   nil,   nil,
   nil,   nil,   nil,    13,   nil,   nil,     8,    22,    12,    11,
    16,   nil,   nil,   nil,    14,    13,   nil,     9,    10,   nil,
   122,    17,    16,    18,    20,   nil,    14,    19,   nil,     9,
    10,    21,   124,    17,   nil,    18,    20,   nil,   nil,    19,
   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,     8,
    22,    12,    11,   nil,   nil,   nil,   nil,   nil,    13,   nil,
   nil,     8,    22,    12,    11,    16,   nil,    13,   nil,    14,
   nil,   nil,     9,    10,    16,   nil,   nil,   nil,    14,   nil,
   nil,     9,    10,   nil,   nil,    17,   nil,    18,    20,   nil,
   nil,    19,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     8,   nil,    32,    11,   nil,   nil,
    13,   nil,   nil,     8,    22,    12,    11,    16,   nil,   nil,
   nil,    14,   nil,   nil,     9,    10,    13,   nil,    17,   nil,
    18,    20,   nil,    16,    19,   nil,   nil,    14,    21,   nil,
     9,    10,   128,   131,    17,   nil,    18,    20,   nil,   nil,
    19,   nil,   nil,    13,    21,   nil,     8,    22,    12,    11,
    16,   nil,   nil,   nil,    14,   nil,   nil,     9,    10,    13,
   nil,   nil,     8,    22,    12,    11,    16,   nil,   nil,   nil,
    14,   nil,   nil,     9,    10,   nil,   135,    17,   nil,    18,
    20,   nil,   nil,    19,   nil,   nil,   nil,    21,   nil,     8,
   nil,    32,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    13,   nil,   nil,     8,    22,    12,    11,    16,
   nil,   nil,   nil,    14,    13,   nil,     9,    10,   nil,   nil,
    17,    16,    18,    20,   nil,    14,    19,   nil,     9,    10,
    21,   139,    17,   nil,    18,    20,   nil,   nil,    19,   nil,
   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,     8,    22,
    12,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     8,    22,    12,    11,    42,    43,    45,    44,    47,    46,
   nil,    40,    41,    35,    36,    39,    38,    37,   nil,   nil,
   nil,   nil,   nil,   nil,    49,    48,    42,    43,    45,    44,
    47,    46,   nil,    40,    41,    35,    36,    39,    38,    37,
   nil,    91,   nil,   nil,   nil,   nil,    49,    48,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    42,    43,    45,    44,    47,
    46,   109,    40,    41,    35,    36,    39,    38,    37,   nil,
   nil,   nil,   nil,   nil,   nil,    49,    48,   nil,   nil,   nil,
   nil,   nil,   121,    42,    43,    45,    44,    47,    46,   120,
    40,    41,    35,    36,    39,    38,    37,   nil,   nil,   nil,
   nil,   nil,   nil,    49,    48,   nil,   nil,    42,    43,    45,
    44,    47,    46,    90,    40,    41,    35,    36,    39,    38,
    37,   nil,   nil,   nil,   nil,   nil,   nil,    49,    48,   nil,
   nil,   nil,   nil,   nil,    88,    42,    43,    45,    44,    47,
    46,   nil,    40,    41,    35,    36,    39,    38,    37,   nil,
   nil,   nil,   nil,   nil,   nil,    49,    48,   nil,   nil,   nil,
   nil,   nil,   130,    42,    43,    45,    44,    47,    46,   nil,
    40,    41,    35,    36,    39,    38,    37,   nil,   nil,   nil,
   nil,   nil,   nil,    49,    48,    42,    43,    45,    44,    47,
    46,   nil,    40,    41,    35,    36,    39,    38,    37,   nil,
   nil,    83,   nil,   nil,   nil,    49,    48,    42,    43,    45,
    44,    47,    46,   nil,    40,    41,    35,    36,    39,    38,
    37,   nil,   nil,   nil,   nil,   nil,   nil,    49,    48,    42,
    43,    45,    44,    47,    46,   nil,    40,    41,    35,    36,
    39,    38,    37,   nil,    42,    43,    45,    44,    47,    46,
    48,    40,    41,    35,    36,    39,    38,    37,   nil,   nil,
   nil,   nil,   nil,   nil,    49,    48,    42,    43,    45,    44,
    47,    46,   nil,    40,    41,    35,    36,    39,    38,    37,
   nil,   nil,   nil,   137,   nil,   nil,    49,    48,    42,    43,
    45,    44,    47,    46,   nil,    40,    41,    35,    36,    39,
    38,    37,    45,    44,    47,    46,   nil,    40,    41,    35,
    36,    39,    38,    37 ]

racc_action_check = [
     2,   105,     0,     5,    92,     1,    92,     2,    95,     3,
    95,     2,    13,     4,     2,     2,    55,     6,     2,    13,
     2,     2,    14,    13,     2,     7,    13,    13,     2,    14,
    55,    55,    12,    14,   105,    19,    14,    14,     0,     5,
    73,    73,    73,    73,    73,    22,     2,     2,     2,     2,
    17,    17,    16,    74,    74,    74,    74,    74,    13,    16,
    13,    13,    18,    16,    60,    60,    16,    16,    14,    18,
    14,    14,    20,    18,    64,    64,    18,    18,    21,    20,
   104,   104,    23,    20,    25,    21,    20,    20,    27,    21,
   114,   114,    21,    21,    28,    53,    54,    57,    16,    62,
    16,    16,    77,    77,    77,    77,    77,    84,    18,    86,
    18,    18,    78,    78,    78,    78,    78,   118,    20,   127,
    20,    20,    24,   134,    21,   nil,    21,    21,   nil,    24,
   nil,   nil,   nil,    24,    31,   nil,    24,    24,   nil,    24,
    24,    31,    24,    24,    35,    31,    24,   nil,    31,    31,
    24,    35,   nil,   nil,   nil,    35,   nil,   nil,    35,    35,
    79,    79,    79,    79,    79,   nil,   nil,   nil,    24,    24,
    24,    24,   nil,   nil,    36,    80,    80,    80,    80,    80,
    31,    36,    31,    31,    37,    36,   nil,   nil,    36,    36,
    35,    37,    35,    35,    38,    37,   nil,   nil,    37,    37,
    39,    38,   nil,   nil,   nil,    38,   nil,    39,    38,    38,
    40,    39,   nil,   nil,    39,    39,   nil,    40,   nil,   nil,
    36,    40,    36,    36,    40,    40,   nil,   nil,   nil,   nil,
    37,   nil,    37,    37,   nil,   nil,   nil,   nil,   nil,   nil,
    38,   nil,    38,    38,   nil,   nil,    39,   nil,    39,    39,
    41,   nil,   nil,   nil,   nil,    42,    40,    41,    40,    40,
    43,    41,    42,   nil,    41,    41,    42,    43,   nil,    42,
    42,    43,    44,   nil,    43,    43,   nil,    45,   nil,    44,
   nil,   nil,   nil,    44,    45,   nil,    44,    44,    45,   nil,
   nil,    45,    45,   nil,   nil,   nil,    41,   nil,    41,    41,
    46,    42,   nil,    42,    42,   nil,    43,    46,    43,    43,
   nil,    46,   nil,   nil,    46,    46,   nil,    47,    44,   nil,
    44,    44,    48,    45,    47,    45,    45,    49,    47,    48,
   nil,    47,    47,    48,    49,   nil,    48,    48,    49,   nil,
   nil,    49,    49,   nil,   nil,   nil,    46,   nil,    46,    46,
    75,    75,    75,    75,   nil,    75,    75,    75,    75,    75,
    75,    75,   nil,    47,   nil,    47,    47,    87,    48,   nil,
    48,    48,   nil,    49,    87,    49,    49,   nil,    87,    88,
   nil,    87,    87,   nil,   nil,    87,    88,    87,    87,   nil,
    88,    87,   nil,    88,    88,    87,   nil,    88,   nil,    88,
    88,   nil,   nil,    88,   nil,   nil,   nil,    88,   nil,   nil,
   nil,   nil,   nil,    87,    87,    87,    87,   nil,   nil,   nil,
   nil,   nil,    89,   nil,   nil,    88,    88,    88,    88,    89,
   nil,    90,   nil,    89,   nil,   nil,    89,    89,    90,   nil,
   nil,   nil,    90,   nil,   nil,    90,    90,   nil,   nil,    90,
   nil,    90,    90,   nil,   nil,    90,   nil,   nil,    96,    90,
   nil,   nil,   nil,   nil,   nil,    96,   nil,   nil,    89,    96,
    89,    89,    96,    96,    91,   nil,   nil,    90,    90,    90,
    90,    91,   nil,   nil,   nil,    91,   nil,   nil,    91,    91,
   nil,   nil,    91,   nil,    91,    91,   nil,   nil,    91,   nil,
   nil,   nil,    91,   nil,    96,   nil,    96,    96,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    98,   nil,   nil,
    91,    91,    91,    91,    98,   nil,   nil,   nil,    98,    99,
   nil,    98,    98,   nil,    98,    98,    99,    98,    98,   nil,
    99,    98,   nil,    99,    99,    98,    99,    99,   nil,    99,
    99,   nil,   nil,    99,   nil,   nil,   nil,    99,   nil,   nil,
   nil,   nil,   nil,    98,    98,    98,    98,   nil,   nil,   nil,
   nil,   nil,   101,   nil,   nil,    99,    99,    99,    99,   101,
   nil,   nil,   nil,   101,   nil,   nil,   101,   101,   nil,   101,
   101,   nil,   101,   101,   nil,   101,   101,   nil,   109,   nil,
   101,   nil,   nil,   nil,   nil,   109,   nil,   nil,   nil,   109,
   nil,   nil,   109,   109,   nil,   102,   nil,   nil,   101,   101,
   101,   101,   102,   nil,   nil,   nil,   102,   nil,   nil,   102,
   102,   nil,   102,   102,   nil,   102,   102,   nil,   nil,   102,
   nil,   nil,   nil,   102,   109,   nil,   109,   109,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   111,   nil,
   nil,   102,   102,   102,   102,   111,   nil,   nil,   nil,   111,
   115,   nil,   111,   111,   nil,   nil,   111,   115,   111,   111,
   nil,   115,   111,   nil,   115,   115,   111,   nil,   115,   nil,
   115,   115,   nil,   nil,   115,   nil,   nil,   nil,   115,   nil,
   nil,   nil,   nil,   nil,   111,   111,   111,   111,   nil,   nil,
   nil,   nil,   nil,   117,   nil,   nil,   115,   115,   115,   115,
   117,   nil,   nil,   nil,   117,   119,   nil,   117,   117,   nil,
   117,   117,   119,   117,   117,   nil,   119,   117,   nil,   119,
   119,   117,   119,   119,   nil,   119,   119,   nil,   nil,   119,
   nil,   nil,   nil,   119,   nil,   nil,   nil,   nil,   nil,   117,
   117,   117,   117,   nil,   nil,   nil,   nil,   nil,   120,   nil,
   nil,   119,   119,   119,   119,   120,   nil,   121,   nil,   120,
   nil,   nil,   120,   120,   121,   nil,   nil,   nil,   121,   nil,
   nil,   121,   121,   nil,   nil,   121,   nil,   121,   121,   nil,
   nil,   121,   nil,   nil,   nil,   121,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   120,   nil,   120,   120,   nil,   nil,
   123,   nil,   nil,   121,   121,   121,   121,   123,   nil,   nil,
   nil,   123,   nil,   nil,   123,   123,   126,   nil,   123,   nil,
   123,   123,   nil,   126,   123,   nil,   nil,   126,   123,   nil,
   126,   126,   123,   126,   126,   nil,   126,   126,   nil,   nil,
   126,   nil,   nil,   128,   126,   nil,   123,   123,   123,   123,
   128,   nil,   nil,   nil,   128,   nil,   nil,   128,   128,   129,
   nil,   nil,   126,   126,   126,   126,   129,   nil,   nil,   nil,
   129,   nil,   nil,   129,   129,   nil,   129,   129,   nil,   129,
   129,   nil,   nil,   129,   nil,   nil,   nil,   129,   nil,   128,
   nil,   128,   128,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   130,   nil,   nil,   129,   129,   129,   129,   130,
   nil,   nil,   nil,   130,   136,   nil,   130,   130,   nil,   nil,
   130,   136,   130,   130,   nil,   136,   130,   nil,   136,   136,
   130,   136,   136,   nil,   136,   136,   nil,   nil,   136,   nil,
   nil,   nil,   136,   nil,   nil,   nil,   nil,   nil,   130,   130,
   130,   130,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   136,   136,   136,   136,    59,    59,    59,    59,    59,    59,
   nil,    59,    59,    59,    59,    59,    59,    59,   nil,   nil,
   nil,   nil,   nil,   nil,    59,    59,   100,   100,   100,   100,
   100,   100,   nil,   100,   100,   100,   100,   100,   100,   100,
   nil,    59,   nil,   nil,   nil,   nil,   100,   100,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   116,   116,   116,   116,   116,
   116,   100,   116,   116,   116,   116,   116,   116,   116,   nil,
   nil,   nil,   nil,   nil,   nil,   116,   116,   nil,   nil,   nil,
   nil,   nil,   116,    58,    58,    58,    58,    58,    58,   116,
    58,    58,    58,    58,    58,    58,    58,   nil,   nil,   nil,
   nil,   nil,   nil,    58,    58,   nil,   nil,    56,    56,    56,
    56,    56,    56,    58,    56,    56,    56,    56,    56,    56,
    56,   nil,   nil,   nil,   nil,   nil,   nil,    56,    56,   nil,
   nil,   nil,   nil,   nil,    56,   125,   125,   125,   125,   125,
   125,   nil,   125,   125,   125,   125,   125,   125,   125,   nil,
   nil,   nil,   nil,   nil,   nil,   125,   125,   nil,   nil,   nil,
   nil,   nil,   125,    15,    15,    15,    15,    15,    15,   nil,
    15,    15,    15,    15,    15,    15,    15,   nil,   nil,   nil,
   nil,   nil,   nil,    15,    15,    50,    50,    50,    50,    50,
    50,   nil,    50,    50,    50,    50,    50,    50,    50,   nil,
   nil,    50,   nil,   nil,   nil,    50,    50,    67,    67,    67,
    67,    67,    67,   nil,    67,    67,    67,    67,    67,    67,
    67,   nil,   nil,   nil,   nil,   nil,   nil,    67,    67,    82,
    82,    82,    82,    82,    82,   nil,    82,    82,    82,    82,
    82,    82,    82,   nil,   106,   106,   106,   106,   106,   106,
    82,   106,   106,   106,   106,   106,   106,   106,   nil,   nil,
   nil,   nil,   nil,   nil,   106,   106,   133,   133,   133,   133,
   133,   133,   nil,   133,   133,   133,   133,   133,   133,   133,
   nil,   nil,   nil,   133,   nil,   nil,   133,   133,    81,    81,
    81,    81,    81,    81,   nil,    81,    81,    81,    81,    81,
    81,    81,    76,    76,    76,    76,   nil,    76,    76,    76,
    76,    76,    76,    76 ]

racc_action_pointer = [
   -24,     5,   -10,   -48,    -6,   -23,    -2,    25,   nil,   nil,
   nil,   nil,    16,     2,    12,  1141,    42,     7,    52,   -23,
    62,    68,    28,    63,   112,    67,   nil,    69,    75,   nil,
   nil,   124,   nil,   nil,   nil,   134,   164,   174,   184,   190,
   200,   240,   245,   250,   262,   267,   290,   307,   312,   317,
  1163,   nil,   nil,    37,    77,   -13,  1085,    62,  1061,   982,
    21,   nil,    80,   nil,    31,   nil,   nil,  1185,   nil,   nil,
   nil,   nil,   nil,    29,    42,   346,  1278,    91,   101,   149,
   164,  1266,  1207,   nil,    91,   nil,    90,   357,   369,   412,
   421,   464,   -14,   nil,   nil,   -10,   448,   nil,   507,   519,
  1004,   562,   605,   nil,    37,    -7,  1222,   nil,   nil,   588,
   nil,   648,   nil,   nil,    47,   660,  1033,   703,    76,   715,
   758,   767,   nil,   810,   nil,  1113,   826,   100,   853,   869,
   912,   nil,   nil,  1244,   104,   nil,   924,   nil,   nil,   nil ]

racc_action_default = [
   -56,   -56,   -41,   -56,   -56,   -56,   -56,   -56,    -1,    -2,
    -3,    -4,    -5,   -56,   -56,   -31,   -56,   -28,   -56,   -56,
   -56,   -56,   -56,   -56,   -41,   -56,   -52,   -56,   -56,   -54,
   140,   -56,    -5,    -6,    -7,   -56,   -56,   -56,   -56,   -56,
   -56,   -56,   -56,   -56,   -56,   -56,   -56,   -56,   -56,   -56,
   -56,   -24,   -25,   -56,   -56,   -28,   -56,   -56,   -56,   -56,
   -28,   -42,   -56,   -49,   -28,   -53,   -55,   -32,    -8,    -9,
   -10,   -11,   -12,   -13,   -14,   -15,   -16,   -17,   -18,   -19,
   -20,   -21,   -22,   -23,   -26,   -29,   -56,   -41,   -41,   -56,
   -41,   -41,   -56,   -47,   -43,   -56,   -56,   -30,   -41,   -41,
   -56,   -41,   -41,   -40,   -28,   -56,   -27,   -33,   -34,   -56,
   -37,   -41,   -39,   -48,   -56,   -41,   -56,   -41,   -56,   -41,
   -56,   -41,   -38,   -41,   -51,   -56,   -41,   -56,   -56,   -41,
   -41,   -36,   -44,   -56,   -56,   -50,   -41,   -45,   -46,   -35 ]

racc_goto_table = [
    24,    33,    34,    54,    50,    62,    56,     6,    58,    59,
     4,     1,    28,    92,   118,    27,    55,    95,   129,    67,
     5,   nil,   nil,    68,    69,    70,    71,    72,    73,    74,
    75,    76,    77,    78,    79,    80,    81,    82,   nil,   nil,
   nil,    86,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   100,   nil,    62,
    62,   nil,    62,    62,   106,    98,    99,   nil,   101,   102,
   113,   nil,   nil,   nil,   nil,   nil,   nil,   116,    62,   nil,
    62,   nil,   nil,   nil,   127,   nil,   nil,    62,   125,   117,
   134,   nil,   nil,   119,   nil,   nil,   133,    62,   nil,   126,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   136 ]

racc_goto_check = [
     7,     2,     2,     4,     2,     6,     2,    10,     2,     2,
    11,     1,    10,     8,     3,    11,     5,     8,     9,     2,
    12,   nil,   nil,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,   nil,   nil,
   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,     6,
     6,   nil,     6,     6,     2,     7,     7,   nil,     7,     7,
     4,   nil,   nil,   nil,   nil,   nil,   nil,     2,     6,   nil,
     6,   nil,   nil,   nil,     6,   nil,   nil,     6,     2,     7,
     6,   nil,   nil,     7,   nil,   nil,     2,     6,   nil,     7,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7 ]

racc_goto_pointer = [
   nil,    11,   -12,  -100,   -14,    -1,   -19,    -2,   -47,  -105,
     7,    10,    20 ]

racc_goto_default = [
   nil,   nil,    15,    53,    93,   nil,    23,   nil,   nil,   nil,
   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 65, :_reduce_1,
  1, 65, :_reduce_2,
  1, 65, :_reduce_3,
  1, 65, :_reduce_4,
  1, 65, :_reduce_5,
  2, 65, :_reduce_6,
  2, 65, :_reduce_7,
  3, 65, :_reduce_8,
  3, 65, :_reduce_9,
  3, 65, :_reduce_10,
  3, 65, :_reduce_11,
  3, 65, :_reduce_12,
  3, 65, :_reduce_13,
  3, 65, :_reduce_14,
  3, 65, :_reduce_15,
  3, 65, :_reduce_16,
  3, 65, :_reduce_17,
  3, 65, :_reduce_18,
  3, 65, :_reduce_19,
  3, 65, :_reduce_20,
  3, 65, :_reduce_21,
  3, 65, :_reduce_22,
  3, 65, :_reduce_23,
  1, 66, :_reduce_24,
  1, 66, :_reduce_25,
  2, 67, :_reduce_26,
  4, 67, :_reduce_27,
  0, 67, :_reduce_28,
  2, 68, :_reduce_29,
  3, 68, :_reduce_30,
  1, 69, :_reduce_31,
  3, 69, :_reduce_32,
  5, 69, :_reduce_33,
  5, 69, :_reduce_34,
  11, 69, :_reduce_35,
  9, 69, :_reduce_36,
  5, 69, :_reduce_37,
  7, 69, :_reduce_38,
  5, 69, :_reduce_39,
  4, 69, :_reduce_40,
  0, 69, :_reduce_41,
  2, 70, :_reduce_42,
  3, 70, :_reduce_43,
  2, 72, :_reduce_44,
  3, 72, :_reduce_45,
  3, 72, :_reduce_46,
  1, 71, :_reduce_47,
  3, 71, :_reduce_48,
  3, 73, :_reduce_49,
  10, 74, :_reduce_50,
  8, 74, :_reduce_51,
  2, 75, :_reduce_52,
  3, 75, :_reduce_53,
  2, 64, :_reduce_54,
  3, 64, :_reduce_55 ]

racc_reduce_n = 56

racc_shift_n = 140

racc_token_table = {
  false => 0,
  :error => 1,
  Equal => 2,
  NotEqual => 3,
  GreaterOrEqualTo => 4,
  LessOrEqualTo => 5,
  GreaterThan => 6,
  LessThan => 7,
  ReturnType => 8,
  Plus => 9,
  Minus => 10,
  Asterisk => 11,
  Slash => 12,
  Percent => 13,
  Mod => 14,
  Div => 15,
  Assignment => 16,
  OpenRoundBracket => 17,
  CloseRoundBracket => 18,
  Semicolon => 19,
  Comma => 20,
  Not => 21,
  And => 22,
  Or => 23,
  True => 24,
  False => 25,
  Program => 26,
  End => 27,
  With => 28,
  Do => 29,
  While => 30,
  If => 31,
  Then => 32,
  Else => 33,
  For => 34,
  From => 35,
  By => 36,
  To => 37,
  Repeat => 38,
  Times => 39,
  Function => 40,
  Begin => 41,
  Return => 42,
  Boolean => 43,
  Number => 44,
  OpenEye => 45,
  CloseEye => 46,
  Backward => 47,
  Forward => 48,
  RotateL => 49,
  RotateR => 50,
  SetPosition => 51,
  Arc => 52,
  Read => 53,
  Write => 54,
  WriteLine => 55,
  NumberLiteral => 56,
  FunctionIdentifier => 57,
  VariableIdentifier => 58,
  StringLiteral => 59,
  :UMINUS => 60,
  :noassoc => 61,
  "func" => 62 }

racc_nt_base = 63

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"==\"",
  "\"/=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "\"->\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"mod\"",
  "\"div\"",
  "\"=\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "\",\"",
  "\"not\"",
  "\"and\"",
  "\"or\"",
  "\"true\"",
  "\"false\"",
  "\"program\"",
  "\"end\"",
  "\"with\"",
  "\"do\"",
  "\"while\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"for\"",
  "\"from\"",
  "\"by\"",
  "\"to\"",
  "\"repeat\"",
  "\"times\"",
  "\"function\"",
  "\"begin\"",
  "\"return\"",
  "\"boolean\"",
  "\"number\"",
  "\"openeye\"",
  "\"closeeye\"",
  "\"backward\"",
  "\"forward\"",
  "\"rotatel\"",
  "\"rotater\"",
  "\"setposition\"",
  "\"arc\"",
  "\"read\"",
  "\"write\"",
  "\"writeline\"",
  "\"num\"",
  "\"funid\"",
  "\"varid\"",
  "\"str\"",
  "UMINUS",
  "noassoc",
  "\"func\"",
  "$start",
  "Retina",
  "Expression",
  "Datatype",
  "Statement",
  "Statements",
  "Instruction",
  "Instructions",
  "Params",
  "InstructionsR",
  "Program",
  "Function",
  "Functions" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'retina_parser.y', 101)
  def _reduce_1(val, _values, result)
     result = SingleNumber.new(val[0])               
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 102)
  def _reduce_2(val, _values, result)
     result = SingleTrue.new(val[0])                 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 103)
  def _reduce_3(val, _values, result)
     result = SingleFalse.new(val[0])                
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 104)
  def _reduce_4(val, _values, result)
     result = SingleString.new(val[0])               
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 105)
  def _reduce_5(val, _values, result)
     result = VariableName.new(val[0])                   
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 106)
  def _reduce_6(val, _values, result)
     result = UnaryMinusOperation.new(val[1])             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 107)
  def _reduce_7(val, _values, result)
     result = NegationOperation.new(val[1])               
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 108)
  def _reduce_8(val, _values, result)
     result = MultiplicationOperation.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 109)
  def _reduce_9(val, _values, result)
     result = DivisionOperation.new(val[0], val[2])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 110)
  def _reduce_10(val, _values, result)
     result = IntDivisionOperation.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 111)
  def _reduce_11(val, _values, result)
     result = ModulusOperation.new(val[0], val[2])        
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 112)
  def _reduce_12(val, _values, result)
     result = ExactModulusOperation.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 113)
  def _reduce_13(val, _values, result)
     result = AdditionOperation.new(val[0], val[2])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 114)
  def _reduce_14(val, _values, result)
     result = SubtractionOperation.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 115)
  def _reduce_15(val, _values, result)
     result = EquivalentOperation.new(val[0], val[2])     
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 116)
  def _reduce_16(val, _values, result)
     result = DifferentOperation.new(val[0], val[2])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 117)
  def _reduce_17(val, _values, result)
     result = LessOrEqualOperation.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 118)
  def _reduce_18(val, _values, result)
     result = GreaterOrEqualOperation.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 119)
  def _reduce_19(val, _values, result)
     result = LessOperation.new(val[0], val[2])           
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 120)
  def _reduce_20(val, _values, result)
     result = GreaterOperation.new(val[0], val[2])        
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 121)
  def _reduce_21(val, _values, result)
     result = DisjunctionOperation.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 122)
  def _reduce_22(val, _values, result)
     result = ConjunctionOperation.new(val[0], val[2])    
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 123)
  def _reduce_23(val, _values, result)
     result = val[1]                                     
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 126)
  def _reduce_24(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 127)
  def _reduce_25(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 130)
  def _reduce_26(val, _values, result)
     result = SimpleStatement.new(val[0], val[1])                       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 131)
  def _reduce_27(val, _values, result)
     result = AssignmentStatement.new(val[0], val[1], val[3])           
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 132)
  def _reduce_28(val, _values, result)
     
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 135)
  def _reduce_29(val, _values, result)
     result = ASList.new(val[0])             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 136)
  def _reduce_30(val, _values, result)
     result = ASList.new(val[1]).join(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 139)
  def _reduce_31(val, _values, result)
     val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 140)
  def _reduce_32(val, _values, result)
     result = AssignmentInstruction.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 141)
  def _reduce_33(val, _values, result)
     result = WithBlock.new(val[1], val[3])           
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 142)
  def _reduce_34(val, _values, result)
     result = WhileBlock.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 143)
  def _reduce_35(val, _values, result)
     result = ForBlock.new(val[1],val[3],val[5],val[7],val[8]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 144)
  def _reduce_36(val, _values, result)
     result = ForBlock.new(val[1],val[3],val[5],1,     val[8]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 145)
  def _reduce_37(val, _values, result)
     result = IfBlock.new(val[1], val[3])     
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 146)
  def _reduce_38(val, _values, result)
     result = IfElseBlock.new(val[1], val[3], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 147)
  def _reduce_39(val, _values, result)
     result = RepeatBlock.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 148)
  def _reduce_40(val, _values, result)
     result = FunctionName.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 149)
  def _reduce_41(val, _values, result)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 152)
  def _reduce_42(val, _values, result)
     result = ASList.new(val[0])             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 153)
  def _reduce_43(val, _values, result)
     result = ASList.new(val[1]).join(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 156)
  def _reduce_44(val, _values, result)
     result = ASList.new(val[0])             
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 157)
  def _reduce_45(val, _values, result)
     result = ASList.new(val[1])        
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 158)
  def _reduce_46(val, _values, result)
     result = ASList.new(val[1]).join(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 161)
  def _reduce_47(val, _values, result)
     result = ASList.new(val[0])            
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 162)
  def _reduce_48(val, _values, result)
     result = ASList.new(val[2]).join(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 165)
  def _reduce_49(val, _values, result)
     result = ProgramBlock.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 168)
  def _reduce_50(val, _values, result)
     result = FunctionStatement.new(val[1], val[3], val[6], val[8])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 169)
  def _reduce_51(val, _values, result)
     result = FunctionStatement.new(val[1], val[3], {}, val[6])       
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 172)
  def _reduce_52(val, _values, result)
     result = ASList.new(val[0])  
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 173)
  def _reduce_53(val, _values, result)
     result = ASList.new(val[1]).join(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 175)
  def _reduce_54(val, _values, result)
     result = ASList.new(val[0])  
    result
  end
.,.,

module_eval(<<'.,.,', 'retina_parser.y', 176)
  def _reduce_55(val, _values, result)
     result = ASList.new(val[1]).join(val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
